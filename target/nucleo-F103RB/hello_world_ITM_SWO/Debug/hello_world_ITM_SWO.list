
hello_world_ITM_SWO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012fc  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a8  0800142c  0800142c  0001142c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014d4  080014d4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080014d4  080014d4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080014d4  080014d4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014d4  080014d4  000114d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080014d8  080014d8  000114d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080014dc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001540  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001540  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000958  00000000  00000000  0002008d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002f8  00000000  00000000  000209e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00020ce0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e0  00000000  00000000  00020df8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000043a6  00000000  00000000  00020ed8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001315  00000000  00000000  0002527e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000932d  00000000  00000000  00026593  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002f8c0  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bc0  00000000  00000000  0002f910  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000064 	.word	0x20000064
 800014c:	00000000 	.word	0x00000000
 8000150:	08001414 	.word	0x08001414

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000068 	.word	0x20000068
 800016c:	08001414 	.word	0x08001414

08000170 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0

	printf("hello world\n");
 8000174:	480f      	ldr	r0, [pc, #60]	; (80001b4 <main+0x44>)
 8000176:	f000 f9c9 	bl	800050c <puts>
	printf("%u\n", sizeof(char));
 800017a:	2101      	movs	r1, #1
 800017c:	480e      	ldr	r0, [pc, #56]	; (80001b8 <main+0x48>)
 800017e:	f000 f93f 	bl	8000400 <iprintf>
	printf("%u\n", sizeof(short));
 8000182:	2102      	movs	r1, #2
 8000184:	480c      	ldr	r0, [pc, #48]	; (80001b8 <main+0x48>)
 8000186:	f000 f93b 	bl	8000400 <iprintf>
	printf("%u\n", sizeof(int));
 800018a:	2104      	movs	r1, #4
 800018c:	480a      	ldr	r0, [pc, #40]	; (80001b8 <main+0x48>)
 800018e:	f000 f937 	bl	8000400 <iprintf>
	printf("%u\n", sizeof(long));
 8000192:	2104      	movs	r1, #4
 8000194:	4808      	ldr	r0, [pc, #32]	; (80001b8 <main+0x48>)
 8000196:	f000 f933 	bl	8000400 <iprintf>
	printf("%u\n", sizeof(long long));
 800019a:	2108      	movs	r1, #8
 800019c:	4806      	ldr	r0, [pc, #24]	; (80001b8 <main+0x48>)
 800019e:	f000 f92f 	bl	8000400 <iprintf>
	printf("%u\n", sizeof(double));
 80001a2:	2108      	movs	r1, #8
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <main+0x48>)
 80001a6:	f000 f92b 	bl	8000400 <iprintf>
	printf("%u\n", sizeof(float));
 80001aa:	2104      	movs	r1, #4
 80001ac:	4802      	ldr	r0, [pc, #8]	; (80001b8 <main+0x48>)
 80001ae:	f000 f927 	bl	8000400 <iprintf>

    /* Loop forever */
	for(;;);
 80001b2:	e7fe      	b.n	80001b2 <main+0x42>
 80001b4:	0800142c 	.word	0x0800142c
 80001b8:	08001438 	.word	0x08001438

080001bc <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80001bc:	b480      	push	{r7}
 80001be:	b083      	sub	sp, #12
 80001c0:	af00      	add	r7, sp, #0
 80001c2:	4603      	mov	r3, r0
 80001c4:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80001c6:	4b0e      	ldr	r3, [pc, #56]	; (8000200 <ITM_SendChar+0x44>)
 80001c8:	681b      	ldr	r3, [r3, #0]
 80001ca:	4a0d      	ldr	r2, [pc, #52]	; (8000200 <ITM_SendChar+0x44>)
 80001cc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80001d0:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80001d2:	4b0c      	ldr	r3, [pc, #48]	; (8000204 <ITM_SendChar+0x48>)
 80001d4:	681b      	ldr	r3, [r3, #0]
 80001d6:	4a0b      	ldr	r2, [pc, #44]	; (8000204 <ITM_SendChar+0x48>)
 80001d8:	f043 0301 	orr.w	r3, r3, #1
 80001dc:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80001de:	bf00      	nop
 80001e0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	f003 0301 	and.w	r3, r3, #1
 80001ea:	2b00      	cmp	r3, #0
 80001ec:	d0f8      	beq.n	80001e0 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80001ee:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80001f2:	79fb      	ldrb	r3, [r7, #7]
 80001f4:	6013      	str	r3, [r2, #0]
}
 80001f6:	bf00      	nop
 80001f8:	370c      	adds	r7, #12
 80001fa:	46bd      	mov	sp, r7
 80001fc:	bc80      	pop	{r7}
 80001fe:	4770      	bx	lr
 8000200:	e000edfc 	.word	0xe000edfc
 8000204:	e0000e00 	.word	0xe0000e00

08000208 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000208:	b580      	push	{r7, lr}
 800020a:	b086      	sub	sp, #24
 800020c:	af00      	add	r7, sp, #0
 800020e:	60f8      	str	r0, [r7, #12]
 8000210:	60b9      	str	r1, [r7, #8]
 8000212:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000214:	2300      	movs	r3, #0
 8000216:	617b      	str	r3, [r7, #20]
 8000218:	e00a      	b.n	8000230 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800021a:	f3af 8000 	nop.w
 800021e:	4601      	mov	r1, r0
 8000220:	68bb      	ldr	r3, [r7, #8]
 8000222:	1c5a      	adds	r2, r3, #1
 8000224:	60ba      	str	r2, [r7, #8]
 8000226:	b2ca      	uxtb	r2, r1
 8000228:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800022a:	697b      	ldr	r3, [r7, #20]
 800022c:	3301      	adds	r3, #1
 800022e:	617b      	str	r3, [r7, #20]
 8000230:	697a      	ldr	r2, [r7, #20]
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	429a      	cmp	r2, r3
 8000236:	dbf0      	blt.n	800021a <_read+0x12>
  }

  return len;
 8000238:	687b      	ldr	r3, [r7, #4]
}
 800023a:	4618      	mov	r0, r3
 800023c:	3718      	adds	r7, #24
 800023e:	46bd      	mov	sp, r7
 8000240:	bd80      	pop	{r7, pc}

08000242 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000242:	b580      	push	{r7, lr}
 8000244:	b086      	sub	sp, #24
 8000246:	af00      	add	r7, sp, #0
 8000248:	60f8      	str	r0, [r7, #12]
 800024a:	60b9      	str	r1, [r7, #8]
 800024c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800024e:	2300      	movs	r3, #0
 8000250:	617b      	str	r3, [r7, #20]
 8000252:	e009      	b.n	8000268 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	/*Write data to ITM Fifo*/
    ITM_SendChar(*ptr++);
 8000254:	68bb      	ldr	r3, [r7, #8]
 8000256:	1c5a      	adds	r2, r3, #1
 8000258:	60ba      	str	r2, [r7, #8]
 800025a:	781b      	ldrb	r3, [r3, #0]
 800025c:	4618      	mov	r0, r3
 800025e:	f7ff ffad 	bl	80001bc <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000262:	697b      	ldr	r3, [r7, #20]
 8000264:	3301      	adds	r3, #1
 8000266:	617b      	str	r3, [r7, #20]
 8000268:	697a      	ldr	r2, [r7, #20]
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	429a      	cmp	r2, r3
 800026e:	dbf1      	blt.n	8000254 <_write+0x12>
  }
  return len;
 8000270:	687b      	ldr	r3, [r7, #4]
}
 8000272:	4618      	mov	r0, r3
 8000274:	3718      	adds	r7, #24
 8000276:	46bd      	mov	sp, r7
 8000278:	bd80      	pop	{r7, pc}

0800027a <_close>:

int _close(int file)
{
 800027a:	b480      	push	{r7}
 800027c:	b083      	sub	sp, #12
 800027e:	af00      	add	r7, sp, #0
 8000280:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000282:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000286:	4618      	mov	r0, r3
 8000288:	370c      	adds	r7, #12
 800028a:	46bd      	mov	sp, r7
 800028c:	bc80      	pop	{r7}
 800028e:	4770      	bx	lr

08000290 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800029a:	683b      	ldr	r3, [r7, #0]
 800029c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80002a0:	605a      	str	r2, [r3, #4]
  return 0;
 80002a2:	2300      	movs	r3, #0
}
 80002a4:	4618      	mov	r0, r3
 80002a6:	370c      	adds	r7, #12
 80002a8:	46bd      	mov	sp, r7
 80002aa:	bc80      	pop	{r7}
 80002ac:	4770      	bx	lr

080002ae <_isatty>:

int _isatty(int file)
{
 80002ae:	b480      	push	{r7}
 80002b0:	b083      	sub	sp, #12
 80002b2:	af00      	add	r7, sp, #0
 80002b4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80002b6:	2301      	movs	r3, #1
}
 80002b8:	4618      	mov	r0, r3
 80002ba:	370c      	adds	r7, #12
 80002bc:	46bd      	mov	sp, r7
 80002be:	bc80      	pop	{r7}
 80002c0:	4770      	bx	lr

080002c2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002c2:	b480      	push	{r7}
 80002c4:	b085      	sub	sp, #20
 80002c6:	af00      	add	r7, sp, #0
 80002c8:	60f8      	str	r0, [r7, #12]
 80002ca:	60b9      	str	r1, [r7, #8]
 80002cc:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80002ce:	2300      	movs	r3, #0
}
 80002d0:	4618      	mov	r0, r3
 80002d2:	3714      	adds	r7, #20
 80002d4:	46bd      	mov	sp, r7
 80002d6:	bc80      	pop	{r7}
 80002d8:	4770      	bx	lr
	...

080002dc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002dc:	b580      	push	{r7, lr}
 80002de:	b086      	sub	sp, #24
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002e4:	4a14      	ldr	r2, [pc, #80]	; (8000338 <_sbrk+0x5c>)
 80002e6:	4b15      	ldr	r3, [pc, #84]	; (800033c <_sbrk+0x60>)
 80002e8:	1ad3      	subs	r3, r2, r3
 80002ea:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002ec:	697b      	ldr	r3, [r7, #20]
 80002ee:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80002f0:	4b13      	ldr	r3, [pc, #76]	; (8000340 <_sbrk+0x64>)
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	2b00      	cmp	r3, #0
 80002f6:	d102      	bne.n	80002fe <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80002f8:	4b11      	ldr	r3, [pc, #68]	; (8000340 <_sbrk+0x64>)
 80002fa:	4a12      	ldr	r2, [pc, #72]	; (8000344 <_sbrk+0x68>)
 80002fc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80002fe:	4b10      	ldr	r3, [pc, #64]	; (8000340 <_sbrk+0x64>)
 8000300:	681a      	ldr	r2, [r3, #0]
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4413      	add	r3, r2
 8000306:	693a      	ldr	r2, [r7, #16]
 8000308:	429a      	cmp	r2, r3
 800030a:	d207      	bcs.n	800031c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800030c:	f000 f846 	bl	800039c <__errno>
 8000310:	4603      	mov	r3, r0
 8000312:	220c      	movs	r2, #12
 8000314:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000316:	f04f 33ff 	mov.w	r3, #4294967295
 800031a:	e009      	b.n	8000330 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800031c:	4b08      	ldr	r3, [pc, #32]	; (8000340 <_sbrk+0x64>)
 800031e:	681b      	ldr	r3, [r3, #0]
 8000320:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000322:	4b07      	ldr	r3, [pc, #28]	; (8000340 <_sbrk+0x64>)
 8000324:	681a      	ldr	r2, [r3, #0]
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	4413      	add	r3, r2
 800032a:	4a05      	ldr	r2, [pc, #20]	; (8000340 <_sbrk+0x64>)
 800032c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800032e:	68fb      	ldr	r3, [r7, #12]
}
 8000330:	4618      	mov	r0, r3
 8000332:	3718      	adds	r7, #24
 8000334:	46bd      	mov	sp, r7
 8000336:	bd80      	pop	{r7, pc}
 8000338:	20005000 	.word	0x20005000
 800033c:	00000400 	.word	0x00000400
 8000340:	20000080 	.word	0x20000080
 8000344:	20000098 	.word	0x20000098

08000348 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000348:	480d      	ldr	r0, [pc, #52]	; (8000380 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800034a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800034c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000350:	480c      	ldr	r0, [pc, #48]	; (8000384 <LoopForever+0x6>)
  ldr r1, =_edata
 8000352:	490d      	ldr	r1, [pc, #52]	; (8000388 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000354:	4a0d      	ldr	r2, [pc, #52]	; (800038c <LoopForever+0xe>)
  movs r3, #0
 8000356:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000358:	e002      	b.n	8000360 <LoopCopyDataInit>

0800035a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800035a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800035c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800035e:	3304      	adds	r3, #4

08000360 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000360:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000362:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000364:	d3f9      	bcc.n	800035a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000366:	4a0a      	ldr	r2, [pc, #40]	; (8000390 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000368:	4c0a      	ldr	r4, [pc, #40]	; (8000394 <LoopForever+0x16>)
  movs r3, #0
 800036a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800036c:	e001      	b.n	8000372 <LoopFillZerobss>

0800036e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800036e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000370:	3204      	adds	r2, #4

08000372 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000372:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000374:	d3fb      	bcc.n	800036e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000376:	f000 f817 	bl	80003a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800037a:	f7ff fef9 	bl	8000170 <main>

0800037e <LoopForever>:

LoopForever:
  b LoopForever
 800037e:	e7fe      	b.n	800037e <LoopForever>
  ldr   r0, =_estack
 8000380:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000384:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000388:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 800038c:	080014dc 	.word	0x080014dc
  ldr r2, =_sbss
 8000390:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000394:	20000094 	.word	0x20000094

08000398 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000398:	e7fe      	b.n	8000398 <ADC1_2_IRQHandler>
	...

0800039c <__errno>:
 800039c:	4b01      	ldr	r3, [pc, #4]	; (80003a4 <__errno+0x8>)
 800039e:	6818      	ldr	r0, [r3, #0]
 80003a0:	4770      	bx	lr
 80003a2:	bf00      	nop
 80003a4:	20000000 	.word	0x20000000

080003a8 <__libc_init_array>:
 80003a8:	b570      	push	{r4, r5, r6, lr}
 80003aa:	2600      	movs	r6, #0
 80003ac:	4d0c      	ldr	r5, [pc, #48]	; (80003e0 <__libc_init_array+0x38>)
 80003ae:	4c0d      	ldr	r4, [pc, #52]	; (80003e4 <__libc_init_array+0x3c>)
 80003b0:	1b64      	subs	r4, r4, r5
 80003b2:	10a4      	asrs	r4, r4, #2
 80003b4:	42a6      	cmp	r6, r4
 80003b6:	d109      	bne.n	80003cc <__libc_init_array+0x24>
 80003b8:	f001 f82c 	bl	8001414 <_init>
 80003bc:	2600      	movs	r6, #0
 80003be:	4d0a      	ldr	r5, [pc, #40]	; (80003e8 <__libc_init_array+0x40>)
 80003c0:	4c0a      	ldr	r4, [pc, #40]	; (80003ec <__libc_init_array+0x44>)
 80003c2:	1b64      	subs	r4, r4, r5
 80003c4:	10a4      	asrs	r4, r4, #2
 80003c6:	42a6      	cmp	r6, r4
 80003c8:	d105      	bne.n	80003d6 <__libc_init_array+0x2e>
 80003ca:	bd70      	pop	{r4, r5, r6, pc}
 80003cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80003d0:	4798      	blx	r3
 80003d2:	3601      	adds	r6, #1
 80003d4:	e7ee      	b.n	80003b4 <__libc_init_array+0xc>
 80003d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80003da:	4798      	blx	r3
 80003dc:	3601      	adds	r6, #1
 80003de:	e7f2      	b.n	80003c6 <__libc_init_array+0x1e>
 80003e0:	080014d4 	.word	0x080014d4
 80003e4:	080014d4 	.word	0x080014d4
 80003e8:	080014d4 	.word	0x080014d4
 80003ec:	080014d8 	.word	0x080014d8

080003f0 <memset>:
 80003f0:	4603      	mov	r3, r0
 80003f2:	4402      	add	r2, r0
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d100      	bne.n	80003fa <memset+0xa>
 80003f8:	4770      	bx	lr
 80003fa:	f803 1b01 	strb.w	r1, [r3], #1
 80003fe:	e7f9      	b.n	80003f4 <memset+0x4>

08000400 <iprintf>:
 8000400:	b40f      	push	{r0, r1, r2, r3}
 8000402:	4b0a      	ldr	r3, [pc, #40]	; (800042c <iprintf+0x2c>)
 8000404:	b513      	push	{r0, r1, r4, lr}
 8000406:	681c      	ldr	r4, [r3, #0]
 8000408:	b124      	cbz	r4, 8000414 <iprintf+0x14>
 800040a:	69a3      	ldr	r3, [r4, #24]
 800040c:	b913      	cbnz	r3, 8000414 <iprintf+0x14>
 800040e:	4620      	mov	r0, r4
 8000410:	f000 fa5a 	bl	80008c8 <__sinit>
 8000414:	ab05      	add	r3, sp, #20
 8000416:	4620      	mov	r0, r4
 8000418:	9a04      	ldr	r2, [sp, #16]
 800041a:	68a1      	ldr	r1, [r4, #8]
 800041c:	9301      	str	r3, [sp, #4]
 800041e:	f000 fc5d 	bl	8000cdc <_vfiprintf_r>
 8000422:	b002      	add	sp, #8
 8000424:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000428:	b004      	add	sp, #16
 800042a:	4770      	bx	lr
 800042c:	20000000 	.word	0x20000000

08000430 <_puts_r>:
 8000430:	b570      	push	{r4, r5, r6, lr}
 8000432:	460e      	mov	r6, r1
 8000434:	4605      	mov	r5, r0
 8000436:	b118      	cbz	r0, 8000440 <_puts_r+0x10>
 8000438:	6983      	ldr	r3, [r0, #24]
 800043a:	b90b      	cbnz	r3, 8000440 <_puts_r+0x10>
 800043c:	f000 fa44 	bl	80008c8 <__sinit>
 8000440:	69ab      	ldr	r3, [r5, #24]
 8000442:	68ac      	ldr	r4, [r5, #8]
 8000444:	b913      	cbnz	r3, 800044c <_puts_r+0x1c>
 8000446:	4628      	mov	r0, r5
 8000448:	f000 fa3e 	bl	80008c8 <__sinit>
 800044c:	4b2c      	ldr	r3, [pc, #176]	; (8000500 <_puts_r+0xd0>)
 800044e:	429c      	cmp	r4, r3
 8000450:	d120      	bne.n	8000494 <_puts_r+0x64>
 8000452:	686c      	ldr	r4, [r5, #4]
 8000454:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000456:	07db      	lsls	r3, r3, #31
 8000458:	d405      	bmi.n	8000466 <_puts_r+0x36>
 800045a:	89a3      	ldrh	r3, [r4, #12]
 800045c:	0598      	lsls	r0, r3, #22
 800045e:	d402      	bmi.n	8000466 <_puts_r+0x36>
 8000460:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000462:	f000 facf 	bl	8000a04 <__retarget_lock_acquire_recursive>
 8000466:	89a3      	ldrh	r3, [r4, #12]
 8000468:	0719      	lsls	r1, r3, #28
 800046a:	d51d      	bpl.n	80004a8 <_puts_r+0x78>
 800046c:	6923      	ldr	r3, [r4, #16]
 800046e:	b1db      	cbz	r3, 80004a8 <_puts_r+0x78>
 8000470:	3e01      	subs	r6, #1
 8000472:	68a3      	ldr	r3, [r4, #8]
 8000474:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000478:	3b01      	subs	r3, #1
 800047a:	60a3      	str	r3, [r4, #8]
 800047c:	bb39      	cbnz	r1, 80004ce <_puts_r+0x9e>
 800047e:	2b00      	cmp	r3, #0
 8000480:	da38      	bge.n	80004f4 <_puts_r+0xc4>
 8000482:	4622      	mov	r2, r4
 8000484:	210a      	movs	r1, #10
 8000486:	4628      	mov	r0, r5
 8000488:	f000 f848 	bl	800051c <__swbuf_r>
 800048c:	3001      	adds	r0, #1
 800048e:	d011      	beq.n	80004b4 <_puts_r+0x84>
 8000490:	250a      	movs	r5, #10
 8000492:	e011      	b.n	80004b8 <_puts_r+0x88>
 8000494:	4b1b      	ldr	r3, [pc, #108]	; (8000504 <_puts_r+0xd4>)
 8000496:	429c      	cmp	r4, r3
 8000498:	d101      	bne.n	800049e <_puts_r+0x6e>
 800049a:	68ac      	ldr	r4, [r5, #8]
 800049c:	e7da      	b.n	8000454 <_puts_r+0x24>
 800049e:	4b1a      	ldr	r3, [pc, #104]	; (8000508 <_puts_r+0xd8>)
 80004a0:	429c      	cmp	r4, r3
 80004a2:	bf08      	it	eq
 80004a4:	68ec      	ldreq	r4, [r5, #12]
 80004a6:	e7d5      	b.n	8000454 <_puts_r+0x24>
 80004a8:	4621      	mov	r1, r4
 80004aa:	4628      	mov	r0, r5
 80004ac:	f000 f888 	bl	80005c0 <__swsetup_r>
 80004b0:	2800      	cmp	r0, #0
 80004b2:	d0dd      	beq.n	8000470 <_puts_r+0x40>
 80004b4:	f04f 35ff 	mov.w	r5, #4294967295
 80004b8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80004ba:	07da      	lsls	r2, r3, #31
 80004bc:	d405      	bmi.n	80004ca <_puts_r+0x9a>
 80004be:	89a3      	ldrh	r3, [r4, #12]
 80004c0:	059b      	lsls	r3, r3, #22
 80004c2:	d402      	bmi.n	80004ca <_puts_r+0x9a>
 80004c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80004c6:	f000 fa9e 	bl	8000a06 <__retarget_lock_release_recursive>
 80004ca:	4628      	mov	r0, r5
 80004cc:	bd70      	pop	{r4, r5, r6, pc}
 80004ce:	2b00      	cmp	r3, #0
 80004d0:	da04      	bge.n	80004dc <_puts_r+0xac>
 80004d2:	69a2      	ldr	r2, [r4, #24]
 80004d4:	429a      	cmp	r2, r3
 80004d6:	dc06      	bgt.n	80004e6 <_puts_r+0xb6>
 80004d8:	290a      	cmp	r1, #10
 80004da:	d004      	beq.n	80004e6 <_puts_r+0xb6>
 80004dc:	6823      	ldr	r3, [r4, #0]
 80004de:	1c5a      	adds	r2, r3, #1
 80004e0:	6022      	str	r2, [r4, #0]
 80004e2:	7019      	strb	r1, [r3, #0]
 80004e4:	e7c5      	b.n	8000472 <_puts_r+0x42>
 80004e6:	4622      	mov	r2, r4
 80004e8:	4628      	mov	r0, r5
 80004ea:	f000 f817 	bl	800051c <__swbuf_r>
 80004ee:	3001      	adds	r0, #1
 80004f0:	d1bf      	bne.n	8000472 <_puts_r+0x42>
 80004f2:	e7df      	b.n	80004b4 <_puts_r+0x84>
 80004f4:	250a      	movs	r5, #10
 80004f6:	6823      	ldr	r3, [r4, #0]
 80004f8:	1c5a      	adds	r2, r3, #1
 80004fa:	6022      	str	r2, [r4, #0]
 80004fc:	701d      	strb	r5, [r3, #0]
 80004fe:	e7db      	b.n	80004b8 <_puts_r+0x88>
 8000500:	08001460 	.word	0x08001460
 8000504:	08001480 	.word	0x08001480
 8000508:	08001440 	.word	0x08001440

0800050c <puts>:
 800050c:	4b02      	ldr	r3, [pc, #8]	; (8000518 <puts+0xc>)
 800050e:	4601      	mov	r1, r0
 8000510:	6818      	ldr	r0, [r3, #0]
 8000512:	f7ff bf8d 	b.w	8000430 <_puts_r>
 8000516:	bf00      	nop
 8000518:	20000000 	.word	0x20000000

0800051c <__swbuf_r>:
 800051c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800051e:	460e      	mov	r6, r1
 8000520:	4614      	mov	r4, r2
 8000522:	4605      	mov	r5, r0
 8000524:	b118      	cbz	r0, 800052e <__swbuf_r+0x12>
 8000526:	6983      	ldr	r3, [r0, #24]
 8000528:	b90b      	cbnz	r3, 800052e <__swbuf_r+0x12>
 800052a:	f000 f9cd 	bl	80008c8 <__sinit>
 800052e:	4b21      	ldr	r3, [pc, #132]	; (80005b4 <__swbuf_r+0x98>)
 8000530:	429c      	cmp	r4, r3
 8000532:	d12b      	bne.n	800058c <__swbuf_r+0x70>
 8000534:	686c      	ldr	r4, [r5, #4]
 8000536:	69a3      	ldr	r3, [r4, #24]
 8000538:	60a3      	str	r3, [r4, #8]
 800053a:	89a3      	ldrh	r3, [r4, #12]
 800053c:	071a      	lsls	r2, r3, #28
 800053e:	d52f      	bpl.n	80005a0 <__swbuf_r+0x84>
 8000540:	6923      	ldr	r3, [r4, #16]
 8000542:	b36b      	cbz	r3, 80005a0 <__swbuf_r+0x84>
 8000544:	6923      	ldr	r3, [r4, #16]
 8000546:	6820      	ldr	r0, [r4, #0]
 8000548:	b2f6      	uxtb	r6, r6
 800054a:	1ac0      	subs	r0, r0, r3
 800054c:	6963      	ldr	r3, [r4, #20]
 800054e:	4637      	mov	r7, r6
 8000550:	4283      	cmp	r3, r0
 8000552:	dc04      	bgt.n	800055e <__swbuf_r+0x42>
 8000554:	4621      	mov	r1, r4
 8000556:	4628      	mov	r0, r5
 8000558:	f000 f922 	bl	80007a0 <_fflush_r>
 800055c:	bb30      	cbnz	r0, 80005ac <__swbuf_r+0x90>
 800055e:	68a3      	ldr	r3, [r4, #8]
 8000560:	3001      	adds	r0, #1
 8000562:	3b01      	subs	r3, #1
 8000564:	60a3      	str	r3, [r4, #8]
 8000566:	6823      	ldr	r3, [r4, #0]
 8000568:	1c5a      	adds	r2, r3, #1
 800056a:	6022      	str	r2, [r4, #0]
 800056c:	701e      	strb	r6, [r3, #0]
 800056e:	6963      	ldr	r3, [r4, #20]
 8000570:	4283      	cmp	r3, r0
 8000572:	d004      	beq.n	800057e <__swbuf_r+0x62>
 8000574:	89a3      	ldrh	r3, [r4, #12]
 8000576:	07db      	lsls	r3, r3, #31
 8000578:	d506      	bpl.n	8000588 <__swbuf_r+0x6c>
 800057a:	2e0a      	cmp	r6, #10
 800057c:	d104      	bne.n	8000588 <__swbuf_r+0x6c>
 800057e:	4621      	mov	r1, r4
 8000580:	4628      	mov	r0, r5
 8000582:	f000 f90d 	bl	80007a0 <_fflush_r>
 8000586:	b988      	cbnz	r0, 80005ac <__swbuf_r+0x90>
 8000588:	4638      	mov	r0, r7
 800058a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800058c:	4b0a      	ldr	r3, [pc, #40]	; (80005b8 <__swbuf_r+0x9c>)
 800058e:	429c      	cmp	r4, r3
 8000590:	d101      	bne.n	8000596 <__swbuf_r+0x7a>
 8000592:	68ac      	ldr	r4, [r5, #8]
 8000594:	e7cf      	b.n	8000536 <__swbuf_r+0x1a>
 8000596:	4b09      	ldr	r3, [pc, #36]	; (80005bc <__swbuf_r+0xa0>)
 8000598:	429c      	cmp	r4, r3
 800059a:	bf08      	it	eq
 800059c:	68ec      	ldreq	r4, [r5, #12]
 800059e:	e7ca      	b.n	8000536 <__swbuf_r+0x1a>
 80005a0:	4621      	mov	r1, r4
 80005a2:	4628      	mov	r0, r5
 80005a4:	f000 f80c 	bl	80005c0 <__swsetup_r>
 80005a8:	2800      	cmp	r0, #0
 80005aa:	d0cb      	beq.n	8000544 <__swbuf_r+0x28>
 80005ac:	f04f 37ff 	mov.w	r7, #4294967295
 80005b0:	e7ea      	b.n	8000588 <__swbuf_r+0x6c>
 80005b2:	bf00      	nop
 80005b4:	08001460 	.word	0x08001460
 80005b8:	08001480 	.word	0x08001480
 80005bc:	08001440 	.word	0x08001440

080005c0 <__swsetup_r>:
 80005c0:	4b32      	ldr	r3, [pc, #200]	; (800068c <__swsetup_r+0xcc>)
 80005c2:	b570      	push	{r4, r5, r6, lr}
 80005c4:	681d      	ldr	r5, [r3, #0]
 80005c6:	4606      	mov	r6, r0
 80005c8:	460c      	mov	r4, r1
 80005ca:	b125      	cbz	r5, 80005d6 <__swsetup_r+0x16>
 80005cc:	69ab      	ldr	r3, [r5, #24]
 80005ce:	b913      	cbnz	r3, 80005d6 <__swsetup_r+0x16>
 80005d0:	4628      	mov	r0, r5
 80005d2:	f000 f979 	bl	80008c8 <__sinit>
 80005d6:	4b2e      	ldr	r3, [pc, #184]	; (8000690 <__swsetup_r+0xd0>)
 80005d8:	429c      	cmp	r4, r3
 80005da:	d10f      	bne.n	80005fc <__swsetup_r+0x3c>
 80005dc:	686c      	ldr	r4, [r5, #4]
 80005de:	89a3      	ldrh	r3, [r4, #12]
 80005e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80005e4:	0719      	lsls	r1, r3, #28
 80005e6:	d42c      	bmi.n	8000642 <__swsetup_r+0x82>
 80005e8:	06dd      	lsls	r5, r3, #27
 80005ea:	d411      	bmi.n	8000610 <__swsetup_r+0x50>
 80005ec:	2309      	movs	r3, #9
 80005ee:	6033      	str	r3, [r6, #0]
 80005f0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80005f4:	f04f 30ff 	mov.w	r0, #4294967295
 80005f8:	81a3      	strh	r3, [r4, #12]
 80005fa:	e03e      	b.n	800067a <__swsetup_r+0xba>
 80005fc:	4b25      	ldr	r3, [pc, #148]	; (8000694 <__swsetup_r+0xd4>)
 80005fe:	429c      	cmp	r4, r3
 8000600:	d101      	bne.n	8000606 <__swsetup_r+0x46>
 8000602:	68ac      	ldr	r4, [r5, #8]
 8000604:	e7eb      	b.n	80005de <__swsetup_r+0x1e>
 8000606:	4b24      	ldr	r3, [pc, #144]	; (8000698 <__swsetup_r+0xd8>)
 8000608:	429c      	cmp	r4, r3
 800060a:	bf08      	it	eq
 800060c:	68ec      	ldreq	r4, [r5, #12]
 800060e:	e7e6      	b.n	80005de <__swsetup_r+0x1e>
 8000610:	0758      	lsls	r0, r3, #29
 8000612:	d512      	bpl.n	800063a <__swsetup_r+0x7a>
 8000614:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000616:	b141      	cbz	r1, 800062a <__swsetup_r+0x6a>
 8000618:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800061c:	4299      	cmp	r1, r3
 800061e:	d002      	beq.n	8000626 <__swsetup_r+0x66>
 8000620:	4630      	mov	r0, r6
 8000622:	f000 fa57 	bl	8000ad4 <_free_r>
 8000626:	2300      	movs	r3, #0
 8000628:	6363      	str	r3, [r4, #52]	; 0x34
 800062a:	89a3      	ldrh	r3, [r4, #12]
 800062c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000630:	81a3      	strh	r3, [r4, #12]
 8000632:	2300      	movs	r3, #0
 8000634:	6063      	str	r3, [r4, #4]
 8000636:	6923      	ldr	r3, [r4, #16]
 8000638:	6023      	str	r3, [r4, #0]
 800063a:	89a3      	ldrh	r3, [r4, #12]
 800063c:	f043 0308 	orr.w	r3, r3, #8
 8000640:	81a3      	strh	r3, [r4, #12]
 8000642:	6923      	ldr	r3, [r4, #16]
 8000644:	b94b      	cbnz	r3, 800065a <__swsetup_r+0x9a>
 8000646:	89a3      	ldrh	r3, [r4, #12]
 8000648:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800064c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000650:	d003      	beq.n	800065a <__swsetup_r+0x9a>
 8000652:	4621      	mov	r1, r4
 8000654:	4630      	mov	r0, r6
 8000656:	f000 f9fd 	bl	8000a54 <__smakebuf_r>
 800065a:	89a0      	ldrh	r0, [r4, #12]
 800065c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000660:	f010 0301 	ands.w	r3, r0, #1
 8000664:	d00a      	beq.n	800067c <__swsetup_r+0xbc>
 8000666:	2300      	movs	r3, #0
 8000668:	60a3      	str	r3, [r4, #8]
 800066a:	6963      	ldr	r3, [r4, #20]
 800066c:	425b      	negs	r3, r3
 800066e:	61a3      	str	r3, [r4, #24]
 8000670:	6923      	ldr	r3, [r4, #16]
 8000672:	b943      	cbnz	r3, 8000686 <__swsetup_r+0xc6>
 8000674:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000678:	d1ba      	bne.n	80005f0 <__swsetup_r+0x30>
 800067a:	bd70      	pop	{r4, r5, r6, pc}
 800067c:	0781      	lsls	r1, r0, #30
 800067e:	bf58      	it	pl
 8000680:	6963      	ldrpl	r3, [r4, #20]
 8000682:	60a3      	str	r3, [r4, #8]
 8000684:	e7f4      	b.n	8000670 <__swsetup_r+0xb0>
 8000686:	2000      	movs	r0, #0
 8000688:	e7f7      	b.n	800067a <__swsetup_r+0xba>
 800068a:	bf00      	nop
 800068c:	20000000 	.word	0x20000000
 8000690:	08001460 	.word	0x08001460
 8000694:	08001480 	.word	0x08001480
 8000698:	08001440 	.word	0x08001440

0800069c <__sflush_r>:
 800069c:	898a      	ldrh	r2, [r1, #12]
 800069e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006a0:	4605      	mov	r5, r0
 80006a2:	0710      	lsls	r0, r2, #28
 80006a4:	460c      	mov	r4, r1
 80006a6:	d457      	bmi.n	8000758 <__sflush_r+0xbc>
 80006a8:	684b      	ldr	r3, [r1, #4]
 80006aa:	2b00      	cmp	r3, #0
 80006ac:	dc04      	bgt.n	80006b8 <__sflush_r+0x1c>
 80006ae:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80006b0:	2b00      	cmp	r3, #0
 80006b2:	dc01      	bgt.n	80006b8 <__sflush_r+0x1c>
 80006b4:	2000      	movs	r0, #0
 80006b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006b8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006ba:	2e00      	cmp	r6, #0
 80006bc:	d0fa      	beq.n	80006b4 <__sflush_r+0x18>
 80006be:	2300      	movs	r3, #0
 80006c0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80006c4:	682f      	ldr	r7, [r5, #0]
 80006c6:	602b      	str	r3, [r5, #0]
 80006c8:	d032      	beq.n	8000730 <__sflush_r+0x94>
 80006ca:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80006cc:	89a3      	ldrh	r3, [r4, #12]
 80006ce:	075a      	lsls	r2, r3, #29
 80006d0:	d505      	bpl.n	80006de <__sflush_r+0x42>
 80006d2:	6863      	ldr	r3, [r4, #4]
 80006d4:	1ac0      	subs	r0, r0, r3
 80006d6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80006d8:	b10b      	cbz	r3, 80006de <__sflush_r+0x42>
 80006da:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80006dc:	1ac0      	subs	r0, r0, r3
 80006de:	2300      	movs	r3, #0
 80006e0:	4602      	mov	r2, r0
 80006e2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006e4:	4628      	mov	r0, r5
 80006e6:	6a21      	ldr	r1, [r4, #32]
 80006e8:	47b0      	blx	r6
 80006ea:	1c43      	adds	r3, r0, #1
 80006ec:	89a3      	ldrh	r3, [r4, #12]
 80006ee:	d106      	bne.n	80006fe <__sflush_r+0x62>
 80006f0:	6829      	ldr	r1, [r5, #0]
 80006f2:	291d      	cmp	r1, #29
 80006f4:	d82c      	bhi.n	8000750 <__sflush_r+0xb4>
 80006f6:	4a29      	ldr	r2, [pc, #164]	; (800079c <__sflush_r+0x100>)
 80006f8:	40ca      	lsrs	r2, r1
 80006fa:	07d6      	lsls	r6, r2, #31
 80006fc:	d528      	bpl.n	8000750 <__sflush_r+0xb4>
 80006fe:	2200      	movs	r2, #0
 8000700:	6062      	str	r2, [r4, #4]
 8000702:	6922      	ldr	r2, [r4, #16]
 8000704:	04d9      	lsls	r1, r3, #19
 8000706:	6022      	str	r2, [r4, #0]
 8000708:	d504      	bpl.n	8000714 <__sflush_r+0x78>
 800070a:	1c42      	adds	r2, r0, #1
 800070c:	d101      	bne.n	8000712 <__sflush_r+0x76>
 800070e:	682b      	ldr	r3, [r5, #0]
 8000710:	b903      	cbnz	r3, 8000714 <__sflush_r+0x78>
 8000712:	6560      	str	r0, [r4, #84]	; 0x54
 8000714:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000716:	602f      	str	r7, [r5, #0]
 8000718:	2900      	cmp	r1, #0
 800071a:	d0cb      	beq.n	80006b4 <__sflush_r+0x18>
 800071c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000720:	4299      	cmp	r1, r3
 8000722:	d002      	beq.n	800072a <__sflush_r+0x8e>
 8000724:	4628      	mov	r0, r5
 8000726:	f000 f9d5 	bl	8000ad4 <_free_r>
 800072a:	2000      	movs	r0, #0
 800072c:	6360      	str	r0, [r4, #52]	; 0x34
 800072e:	e7c2      	b.n	80006b6 <__sflush_r+0x1a>
 8000730:	6a21      	ldr	r1, [r4, #32]
 8000732:	2301      	movs	r3, #1
 8000734:	4628      	mov	r0, r5
 8000736:	47b0      	blx	r6
 8000738:	1c41      	adds	r1, r0, #1
 800073a:	d1c7      	bne.n	80006cc <__sflush_r+0x30>
 800073c:	682b      	ldr	r3, [r5, #0]
 800073e:	2b00      	cmp	r3, #0
 8000740:	d0c4      	beq.n	80006cc <__sflush_r+0x30>
 8000742:	2b1d      	cmp	r3, #29
 8000744:	d001      	beq.n	800074a <__sflush_r+0xae>
 8000746:	2b16      	cmp	r3, #22
 8000748:	d101      	bne.n	800074e <__sflush_r+0xb2>
 800074a:	602f      	str	r7, [r5, #0]
 800074c:	e7b2      	b.n	80006b4 <__sflush_r+0x18>
 800074e:	89a3      	ldrh	r3, [r4, #12]
 8000750:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000754:	81a3      	strh	r3, [r4, #12]
 8000756:	e7ae      	b.n	80006b6 <__sflush_r+0x1a>
 8000758:	690f      	ldr	r7, [r1, #16]
 800075a:	2f00      	cmp	r7, #0
 800075c:	d0aa      	beq.n	80006b4 <__sflush_r+0x18>
 800075e:	0793      	lsls	r3, r2, #30
 8000760:	bf18      	it	ne
 8000762:	2300      	movne	r3, #0
 8000764:	680e      	ldr	r6, [r1, #0]
 8000766:	bf08      	it	eq
 8000768:	694b      	ldreq	r3, [r1, #20]
 800076a:	1bf6      	subs	r6, r6, r7
 800076c:	600f      	str	r7, [r1, #0]
 800076e:	608b      	str	r3, [r1, #8]
 8000770:	2e00      	cmp	r6, #0
 8000772:	dd9f      	ble.n	80006b4 <__sflush_r+0x18>
 8000774:	4633      	mov	r3, r6
 8000776:	463a      	mov	r2, r7
 8000778:	4628      	mov	r0, r5
 800077a:	6a21      	ldr	r1, [r4, #32]
 800077c:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000780:	47e0      	blx	ip
 8000782:	2800      	cmp	r0, #0
 8000784:	dc06      	bgt.n	8000794 <__sflush_r+0xf8>
 8000786:	89a3      	ldrh	r3, [r4, #12]
 8000788:	f04f 30ff 	mov.w	r0, #4294967295
 800078c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000790:	81a3      	strh	r3, [r4, #12]
 8000792:	e790      	b.n	80006b6 <__sflush_r+0x1a>
 8000794:	4407      	add	r7, r0
 8000796:	1a36      	subs	r6, r6, r0
 8000798:	e7ea      	b.n	8000770 <__sflush_r+0xd4>
 800079a:	bf00      	nop
 800079c:	20400001 	.word	0x20400001

080007a0 <_fflush_r>:
 80007a0:	b538      	push	{r3, r4, r5, lr}
 80007a2:	690b      	ldr	r3, [r1, #16]
 80007a4:	4605      	mov	r5, r0
 80007a6:	460c      	mov	r4, r1
 80007a8:	b913      	cbnz	r3, 80007b0 <_fflush_r+0x10>
 80007aa:	2500      	movs	r5, #0
 80007ac:	4628      	mov	r0, r5
 80007ae:	bd38      	pop	{r3, r4, r5, pc}
 80007b0:	b118      	cbz	r0, 80007ba <_fflush_r+0x1a>
 80007b2:	6983      	ldr	r3, [r0, #24]
 80007b4:	b90b      	cbnz	r3, 80007ba <_fflush_r+0x1a>
 80007b6:	f000 f887 	bl	80008c8 <__sinit>
 80007ba:	4b14      	ldr	r3, [pc, #80]	; (800080c <_fflush_r+0x6c>)
 80007bc:	429c      	cmp	r4, r3
 80007be:	d11b      	bne.n	80007f8 <_fflush_r+0x58>
 80007c0:	686c      	ldr	r4, [r5, #4]
 80007c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007c6:	2b00      	cmp	r3, #0
 80007c8:	d0ef      	beq.n	80007aa <_fflush_r+0xa>
 80007ca:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80007cc:	07d0      	lsls	r0, r2, #31
 80007ce:	d404      	bmi.n	80007da <_fflush_r+0x3a>
 80007d0:	0599      	lsls	r1, r3, #22
 80007d2:	d402      	bmi.n	80007da <_fflush_r+0x3a>
 80007d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80007d6:	f000 f915 	bl	8000a04 <__retarget_lock_acquire_recursive>
 80007da:	4628      	mov	r0, r5
 80007dc:	4621      	mov	r1, r4
 80007de:	f7ff ff5d 	bl	800069c <__sflush_r>
 80007e2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80007e4:	4605      	mov	r5, r0
 80007e6:	07da      	lsls	r2, r3, #31
 80007e8:	d4e0      	bmi.n	80007ac <_fflush_r+0xc>
 80007ea:	89a3      	ldrh	r3, [r4, #12]
 80007ec:	059b      	lsls	r3, r3, #22
 80007ee:	d4dd      	bmi.n	80007ac <_fflush_r+0xc>
 80007f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80007f2:	f000 f908 	bl	8000a06 <__retarget_lock_release_recursive>
 80007f6:	e7d9      	b.n	80007ac <_fflush_r+0xc>
 80007f8:	4b05      	ldr	r3, [pc, #20]	; (8000810 <_fflush_r+0x70>)
 80007fa:	429c      	cmp	r4, r3
 80007fc:	d101      	bne.n	8000802 <_fflush_r+0x62>
 80007fe:	68ac      	ldr	r4, [r5, #8]
 8000800:	e7df      	b.n	80007c2 <_fflush_r+0x22>
 8000802:	4b04      	ldr	r3, [pc, #16]	; (8000814 <_fflush_r+0x74>)
 8000804:	429c      	cmp	r4, r3
 8000806:	bf08      	it	eq
 8000808:	68ec      	ldreq	r4, [r5, #12]
 800080a:	e7da      	b.n	80007c2 <_fflush_r+0x22>
 800080c:	08001460 	.word	0x08001460
 8000810:	08001480 	.word	0x08001480
 8000814:	08001440 	.word	0x08001440

08000818 <std>:
 8000818:	2300      	movs	r3, #0
 800081a:	b510      	push	{r4, lr}
 800081c:	4604      	mov	r4, r0
 800081e:	e9c0 3300 	strd	r3, r3, [r0]
 8000822:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000826:	6083      	str	r3, [r0, #8]
 8000828:	8181      	strh	r1, [r0, #12]
 800082a:	6643      	str	r3, [r0, #100]	; 0x64
 800082c:	81c2      	strh	r2, [r0, #14]
 800082e:	6183      	str	r3, [r0, #24]
 8000830:	4619      	mov	r1, r3
 8000832:	2208      	movs	r2, #8
 8000834:	305c      	adds	r0, #92	; 0x5c
 8000836:	f7ff fddb 	bl	80003f0 <memset>
 800083a:	4b05      	ldr	r3, [pc, #20]	; (8000850 <std+0x38>)
 800083c:	6224      	str	r4, [r4, #32]
 800083e:	6263      	str	r3, [r4, #36]	; 0x24
 8000840:	4b04      	ldr	r3, [pc, #16]	; (8000854 <std+0x3c>)
 8000842:	62a3      	str	r3, [r4, #40]	; 0x28
 8000844:	4b04      	ldr	r3, [pc, #16]	; (8000858 <std+0x40>)
 8000846:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000848:	4b04      	ldr	r3, [pc, #16]	; (800085c <std+0x44>)
 800084a:	6323      	str	r3, [r4, #48]	; 0x30
 800084c:	bd10      	pop	{r4, pc}
 800084e:	bf00      	nop
 8000850:	08001289 	.word	0x08001289
 8000854:	080012ab 	.word	0x080012ab
 8000858:	080012e3 	.word	0x080012e3
 800085c:	08001307 	.word	0x08001307

08000860 <_cleanup_r>:
 8000860:	4901      	ldr	r1, [pc, #4]	; (8000868 <_cleanup_r+0x8>)
 8000862:	f000 b8af 	b.w	80009c4 <_fwalk_reent>
 8000866:	bf00      	nop
 8000868:	080007a1 	.word	0x080007a1

0800086c <__sfmoreglue>:
 800086c:	2268      	movs	r2, #104	; 0x68
 800086e:	b570      	push	{r4, r5, r6, lr}
 8000870:	1e4d      	subs	r5, r1, #1
 8000872:	4355      	muls	r5, r2
 8000874:	460e      	mov	r6, r1
 8000876:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800087a:	f000 f993 	bl	8000ba4 <_malloc_r>
 800087e:	4604      	mov	r4, r0
 8000880:	b140      	cbz	r0, 8000894 <__sfmoreglue+0x28>
 8000882:	2100      	movs	r1, #0
 8000884:	e9c0 1600 	strd	r1, r6, [r0]
 8000888:	300c      	adds	r0, #12
 800088a:	60a0      	str	r0, [r4, #8]
 800088c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000890:	f7ff fdae 	bl	80003f0 <memset>
 8000894:	4620      	mov	r0, r4
 8000896:	bd70      	pop	{r4, r5, r6, pc}

08000898 <__sfp_lock_acquire>:
 8000898:	4801      	ldr	r0, [pc, #4]	; (80008a0 <__sfp_lock_acquire+0x8>)
 800089a:	f000 b8b3 	b.w	8000a04 <__retarget_lock_acquire_recursive>
 800089e:	bf00      	nop
 80008a0:	20000085 	.word	0x20000085

080008a4 <__sfp_lock_release>:
 80008a4:	4801      	ldr	r0, [pc, #4]	; (80008ac <__sfp_lock_release+0x8>)
 80008a6:	f000 b8ae 	b.w	8000a06 <__retarget_lock_release_recursive>
 80008aa:	bf00      	nop
 80008ac:	20000085 	.word	0x20000085

080008b0 <__sinit_lock_acquire>:
 80008b0:	4801      	ldr	r0, [pc, #4]	; (80008b8 <__sinit_lock_acquire+0x8>)
 80008b2:	f000 b8a7 	b.w	8000a04 <__retarget_lock_acquire_recursive>
 80008b6:	bf00      	nop
 80008b8:	20000086 	.word	0x20000086

080008bc <__sinit_lock_release>:
 80008bc:	4801      	ldr	r0, [pc, #4]	; (80008c4 <__sinit_lock_release+0x8>)
 80008be:	f000 b8a2 	b.w	8000a06 <__retarget_lock_release_recursive>
 80008c2:	bf00      	nop
 80008c4:	20000086 	.word	0x20000086

080008c8 <__sinit>:
 80008c8:	b510      	push	{r4, lr}
 80008ca:	4604      	mov	r4, r0
 80008cc:	f7ff fff0 	bl	80008b0 <__sinit_lock_acquire>
 80008d0:	69a3      	ldr	r3, [r4, #24]
 80008d2:	b11b      	cbz	r3, 80008dc <__sinit+0x14>
 80008d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008d8:	f7ff bff0 	b.w	80008bc <__sinit_lock_release>
 80008dc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80008e0:	6523      	str	r3, [r4, #80]	; 0x50
 80008e2:	4b13      	ldr	r3, [pc, #76]	; (8000930 <__sinit+0x68>)
 80008e4:	4a13      	ldr	r2, [pc, #76]	; (8000934 <__sinit+0x6c>)
 80008e6:	681b      	ldr	r3, [r3, #0]
 80008e8:	62a2      	str	r2, [r4, #40]	; 0x28
 80008ea:	42a3      	cmp	r3, r4
 80008ec:	bf08      	it	eq
 80008ee:	2301      	moveq	r3, #1
 80008f0:	4620      	mov	r0, r4
 80008f2:	bf08      	it	eq
 80008f4:	61a3      	streq	r3, [r4, #24]
 80008f6:	f000 f81f 	bl	8000938 <__sfp>
 80008fa:	6060      	str	r0, [r4, #4]
 80008fc:	4620      	mov	r0, r4
 80008fe:	f000 f81b 	bl	8000938 <__sfp>
 8000902:	60a0      	str	r0, [r4, #8]
 8000904:	4620      	mov	r0, r4
 8000906:	f000 f817 	bl	8000938 <__sfp>
 800090a:	2200      	movs	r2, #0
 800090c:	2104      	movs	r1, #4
 800090e:	60e0      	str	r0, [r4, #12]
 8000910:	6860      	ldr	r0, [r4, #4]
 8000912:	f7ff ff81 	bl	8000818 <std>
 8000916:	2201      	movs	r2, #1
 8000918:	2109      	movs	r1, #9
 800091a:	68a0      	ldr	r0, [r4, #8]
 800091c:	f7ff ff7c 	bl	8000818 <std>
 8000920:	2202      	movs	r2, #2
 8000922:	2112      	movs	r1, #18
 8000924:	68e0      	ldr	r0, [r4, #12]
 8000926:	f7ff ff77 	bl	8000818 <std>
 800092a:	2301      	movs	r3, #1
 800092c:	61a3      	str	r3, [r4, #24]
 800092e:	e7d1      	b.n	80008d4 <__sinit+0xc>
 8000930:	0800143c 	.word	0x0800143c
 8000934:	08000861 	.word	0x08000861

08000938 <__sfp>:
 8000938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800093a:	4607      	mov	r7, r0
 800093c:	f7ff ffac 	bl	8000898 <__sfp_lock_acquire>
 8000940:	4b1e      	ldr	r3, [pc, #120]	; (80009bc <__sfp+0x84>)
 8000942:	681e      	ldr	r6, [r3, #0]
 8000944:	69b3      	ldr	r3, [r6, #24]
 8000946:	b913      	cbnz	r3, 800094e <__sfp+0x16>
 8000948:	4630      	mov	r0, r6
 800094a:	f7ff ffbd 	bl	80008c8 <__sinit>
 800094e:	3648      	adds	r6, #72	; 0x48
 8000950:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000954:	3b01      	subs	r3, #1
 8000956:	d503      	bpl.n	8000960 <__sfp+0x28>
 8000958:	6833      	ldr	r3, [r6, #0]
 800095a:	b30b      	cbz	r3, 80009a0 <__sfp+0x68>
 800095c:	6836      	ldr	r6, [r6, #0]
 800095e:	e7f7      	b.n	8000950 <__sfp+0x18>
 8000960:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000964:	b9d5      	cbnz	r5, 800099c <__sfp+0x64>
 8000966:	4b16      	ldr	r3, [pc, #88]	; (80009c0 <__sfp+0x88>)
 8000968:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800096c:	60e3      	str	r3, [r4, #12]
 800096e:	6665      	str	r5, [r4, #100]	; 0x64
 8000970:	f000 f847 	bl	8000a02 <__retarget_lock_init_recursive>
 8000974:	f7ff ff96 	bl	80008a4 <__sfp_lock_release>
 8000978:	2208      	movs	r2, #8
 800097a:	4629      	mov	r1, r5
 800097c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000980:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000984:	6025      	str	r5, [r4, #0]
 8000986:	61a5      	str	r5, [r4, #24]
 8000988:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800098c:	f7ff fd30 	bl	80003f0 <memset>
 8000990:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000994:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000998:	4620      	mov	r0, r4
 800099a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800099c:	3468      	adds	r4, #104	; 0x68
 800099e:	e7d9      	b.n	8000954 <__sfp+0x1c>
 80009a0:	2104      	movs	r1, #4
 80009a2:	4638      	mov	r0, r7
 80009a4:	f7ff ff62 	bl	800086c <__sfmoreglue>
 80009a8:	4604      	mov	r4, r0
 80009aa:	6030      	str	r0, [r6, #0]
 80009ac:	2800      	cmp	r0, #0
 80009ae:	d1d5      	bne.n	800095c <__sfp+0x24>
 80009b0:	f7ff ff78 	bl	80008a4 <__sfp_lock_release>
 80009b4:	230c      	movs	r3, #12
 80009b6:	603b      	str	r3, [r7, #0]
 80009b8:	e7ee      	b.n	8000998 <__sfp+0x60>
 80009ba:	bf00      	nop
 80009bc:	0800143c 	.word	0x0800143c
 80009c0:	ffff0001 	.word	0xffff0001

080009c4 <_fwalk_reent>:
 80009c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009c8:	4606      	mov	r6, r0
 80009ca:	4688      	mov	r8, r1
 80009cc:	2700      	movs	r7, #0
 80009ce:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80009d2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80009d6:	f1b9 0901 	subs.w	r9, r9, #1
 80009da:	d505      	bpl.n	80009e8 <_fwalk_reent+0x24>
 80009dc:	6824      	ldr	r4, [r4, #0]
 80009de:	2c00      	cmp	r4, #0
 80009e0:	d1f7      	bne.n	80009d2 <_fwalk_reent+0xe>
 80009e2:	4638      	mov	r0, r7
 80009e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009e8:	89ab      	ldrh	r3, [r5, #12]
 80009ea:	2b01      	cmp	r3, #1
 80009ec:	d907      	bls.n	80009fe <_fwalk_reent+0x3a>
 80009ee:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80009f2:	3301      	adds	r3, #1
 80009f4:	d003      	beq.n	80009fe <_fwalk_reent+0x3a>
 80009f6:	4629      	mov	r1, r5
 80009f8:	4630      	mov	r0, r6
 80009fa:	47c0      	blx	r8
 80009fc:	4307      	orrs	r7, r0
 80009fe:	3568      	adds	r5, #104	; 0x68
 8000a00:	e7e9      	b.n	80009d6 <_fwalk_reent+0x12>

08000a02 <__retarget_lock_init_recursive>:
 8000a02:	4770      	bx	lr

08000a04 <__retarget_lock_acquire_recursive>:
 8000a04:	4770      	bx	lr

08000a06 <__retarget_lock_release_recursive>:
 8000a06:	4770      	bx	lr

08000a08 <__swhatbuf_r>:
 8000a08:	b570      	push	{r4, r5, r6, lr}
 8000a0a:	460e      	mov	r6, r1
 8000a0c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a10:	4614      	mov	r4, r2
 8000a12:	2900      	cmp	r1, #0
 8000a14:	461d      	mov	r5, r3
 8000a16:	b096      	sub	sp, #88	; 0x58
 8000a18:	da08      	bge.n	8000a2c <__swhatbuf_r+0x24>
 8000a1a:	2200      	movs	r2, #0
 8000a1c:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000a20:	602a      	str	r2, [r5, #0]
 8000a22:	061a      	lsls	r2, r3, #24
 8000a24:	d410      	bmi.n	8000a48 <__swhatbuf_r+0x40>
 8000a26:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a2a:	e00e      	b.n	8000a4a <__swhatbuf_r+0x42>
 8000a2c:	466a      	mov	r2, sp
 8000a2e:	f000 fc91 	bl	8001354 <_fstat_r>
 8000a32:	2800      	cmp	r0, #0
 8000a34:	dbf1      	blt.n	8000a1a <__swhatbuf_r+0x12>
 8000a36:	9a01      	ldr	r2, [sp, #4]
 8000a38:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000a3c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000a40:	425a      	negs	r2, r3
 8000a42:	415a      	adcs	r2, r3
 8000a44:	602a      	str	r2, [r5, #0]
 8000a46:	e7ee      	b.n	8000a26 <__swhatbuf_r+0x1e>
 8000a48:	2340      	movs	r3, #64	; 0x40
 8000a4a:	2000      	movs	r0, #0
 8000a4c:	6023      	str	r3, [r4, #0]
 8000a4e:	b016      	add	sp, #88	; 0x58
 8000a50:	bd70      	pop	{r4, r5, r6, pc}
	...

08000a54 <__smakebuf_r>:
 8000a54:	898b      	ldrh	r3, [r1, #12]
 8000a56:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000a58:	079d      	lsls	r5, r3, #30
 8000a5a:	4606      	mov	r6, r0
 8000a5c:	460c      	mov	r4, r1
 8000a5e:	d507      	bpl.n	8000a70 <__smakebuf_r+0x1c>
 8000a60:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000a64:	6023      	str	r3, [r4, #0]
 8000a66:	6123      	str	r3, [r4, #16]
 8000a68:	2301      	movs	r3, #1
 8000a6a:	6163      	str	r3, [r4, #20]
 8000a6c:	b002      	add	sp, #8
 8000a6e:	bd70      	pop	{r4, r5, r6, pc}
 8000a70:	466a      	mov	r2, sp
 8000a72:	ab01      	add	r3, sp, #4
 8000a74:	f7ff ffc8 	bl	8000a08 <__swhatbuf_r>
 8000a78:	9900      	ldr	r1, [sp, #0]
 8000a7a:	4605      	mov	r5, r0
 8000a7c:	4630      	mov	r0, r6
 8000a7e:	f000 f891 	bl	8000ba4 <_malloc_r>
 8000a82:	b948      	cbnz	r0, 8000a98 <__smakebuf_r+0x44>
 8000a84:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a88:	059a      	lsls	r2, r3, #22
 8000a8a:	d4ef      	bmi.n	8000a6c <__smakebuf_r+0x18>
 8000a8c:	f023 0303 	bic.w	r3, r3, #3
 8000a90:	f043 0302 	orr.w	r3, r3, #2
 8000a94:	81a3      	strh	r3, [r4, #12]
 8000a96:	e7e3      	b.n	8000a60 <__smakebuf_r+0xc>
 8000a98:	4b0d      	ldr	r3, [pc, #52]	; (8000ad0 <__smakebuf_r+0x7c>)
 8000a9a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a9c:	89a3      	ldrh	r3, [r4, #12]
 8000a9e:	6020      	str	r0, [r4, #0]
 8000aa0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000aa4:	81a3      	strh	r3, [r4, #12]
 8000aa6:	9b00      	ldr	r3, [sp, #0]
 8000aa8:	6120      	str	r0, [r4, #16]
 8000aaa:	6163      	str	r3, [r4, #20]
 8000aac:	9b01      	ldr	r3, [sp, #4]
 8000aae:	b15b      	cbz	r3, 8000ac8 <__smakebuf_r+0x74>
 8000ab0:	4630      	mov	r0, r6
 8000ab2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ab6:	f000 fc5f 	bl	8001378 <_isatty_r>
 8000aba:	b128      	cbz	r0, 8000ac8 <__smakebuf_r+0x74>
 8000abc:	89a3      	ldrh	r3, [r4, #12]
 8000abe:	f023 0303 	bic.w	r3, r3, #3
 8000ac2:	f043 0301 	orr.w	r3, r3, #1
 8000ac6:	81a3      	strh	r3, [r4, #12]
 8000ac8:	89a0      	ldrh	r0, [r4, #12]
 8000aca:	4305      	orrs	r5, r0
 8000acc:	81a5      	strh	r5, [r4, #12]
 8000ace:	e7cd      	b.n	8000a6c <__smakebuf_r+0x18>
 8000ad0:	08000861 	.word	0x08000861

08000ad4 <_free_r>:
 8000ad4:	b538      	push	{r3, r4, r5, lr}
 8000ad6:	4605      	mov	r5, r0
 8000ad8:	2900      	cmp	r1, #0
 8000ada:	d040      	beq.n	8000b5e <_free_r+0x8a>
 8000adc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ae0:	1f0c      	subs	r4, r1, #4
 8000ae2:	2b00      	cmp	r3, #0
 8000ae4:	bfb8      	it	lt
 8000ae6:	18e4      	addlt	r4, r4, r3
 8000ae8:	f000 fc76 	bl	80013d8 <__malloc_lock>
 8000aec:	4a1c      	ldr	r2, [pc, #112]	; (8000b60 <_free_r+0x8c>)
 8000aee:	6813      	ldr	r3, [r2, #0]
 8000af0:	b933      	cbnz	r3, 8000b00 <_free_r+0x2c>
 8000af2:	6063      	str	r3, [r4, #4]
 8000af4:	6014      	str	r4, [r2, #0]
 8000af6:	4628      	mov	r0, r5
 8000af8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000afc:	f000 bc72 	b.w	80013e4 <__malloc_unlock>
 8000b00:	42a3      	cmp	r3, r4
 8000b02:	d908      	bls.n	8000b16 <_free_r+0x42>
 8000b04:	6820      	ldr	r0, [r4, #0]
 8000b06:	1821      	adds	r1, r4, r0
 8000b08:	428b      	cmp	r3, r1
 8000b0a:	bf01      	itttt	eq
 8000b0c:	6819      	ldreq	r1, [r3, #0]
 8000b0e:	685b      	ldreq	r3, [r3, #4]
 8000b10:	1809      	addeq	r1, r1, r0
 8000b12:	6021      	streq	r1, [r4, #0]
 8000b14:	e7ed      	b.n	8000af2 <_free_r+0x1e>
 8000b16:	461a      	mov	r2, r3
 8000b18:	685b      	ldr	r3, [r3, #4]
 8000b1a:	b10b      	cbz	r3, 8000b20 <_free_r+0x4c>
 8000b1c:	42a3      	cmp	r3, r4
 8000b1e:	d9fa      	bls.n	8000b16 <_free_r+0x42>
 8000b20:	6811      	ldr	r1, [r2, #0]
 8000b22:	1850      	adds	r0, r2, r1
 8000b24:	42a0      	cmp	r0, r4
 8000b26:	d10b      	bne.n	8000b40 <_free_r+0x6c>
 8000b28:	6820      	ldr	r0, [r4, #0]
 8000b2a:	4401      	add	r1, r0
 8000b2c:	1850      	adds	r0, r2, r1
 8000b2e:	4283      	cmp	r3, r0
 8000b30:	6011      	str	r1, [r2, #0]
 8000b32:	d1e0      	bne.n	8000af6 <_free_r+0x22>
 8000b34:	6818      	ldr	r0, [r3, #0]
 8000b36:	685b      	ldr	r3, [r3, #4]
 8000b38:	4401      	add	r1, r0
 8000b3a:	6011      	str	r1, [r2, #0]
 8000b3c:	6053      	str	r3, [r2, #4]
 8000b3e:	e7da      	b.n	8000af6 <_free_r+0x22>
 8000b40:	d902      	bls.n	8000b48 <_free_r+0x74>
 8000b42:	230c      	movs	r3, #12
 8000b44:	602b      	str	r3, [r5, #0]
 8000b46:	e7d6      	b.n	8000af6 <_free_r+0x22>
 8000b48:	6820      	ldr	r0, [r4, #0]
 8000b4a:	1821      	adds	r1, r4, r0
 8000b4c:	428b      	cmp	r3, r1
 8000b4e:	bf01      	itttt	eq
 8000b50:	6819      	ldreq	r1, [r3, #0]
 8000b52:	685b      	ldreq	r3, [r3, #4]
 8000b54:	1809      	addeq	r1, r1, r0
 8000b56:	6021      	streq	r1, [r4, #0]
 8000b58:	6063      	str	r3, [r4, #4]
 8000b5a:	6054      	str	r4, [r2, #4]
 8000b5c:	e7cb      	b.n	8000af6 <_free_r+0x22>
 8000b5e:	bd38      	pop	{r3, r4, r5, pc}
 8000b60:	20000088 	.word	0x20000088

08000b64 <sbrk_aligned>:
 8000b64:	b570      	push	{r4, r5, r6, lr}
 8000b66:	4e0e      	ldr	r6, [pc, #56]	; (8000ba0 <sbrk_aligned+0x3c>)
 8000b68:	460c      	mov	r4, r1
 8000b6a:	6831      	ldr	r1, [r6, #0]
 8000b6c:	4605      	mov	r5, r0
 8000b6e:	b911      	cbnz	r1, 8000b76 <sbrk_aligned+0x12>
 8000b70:	f000 fb7a 	bl	8001268 <_sbrk_r>
 8000b74:	6030      	str	r0, [r6, #0]
 8000b76:	4621      	mov	r1, r4
 8000b78:	4628      	mov	r0, r5
 8000b7a:	f000 fb75 	bl	8001268 <_sbrk_r>
 8000b7e:	1c43      	adds	r3, r0, #1
 8000b80:	d00a      	beq.n	8000b98 <sbrk_aligned+0x34>
 8000b82:	1cc4      	adds	r4, r0, #3
 8000b84:	f024 0403 	bic.w	r4, r4, #3
 8000b88:	42a0      	cmp	r0, r4
 8000b8a:	d007      	beq.n	8000b9c <sbrk_aligned+0x38>
 8000b8c:	1a21      	subs	r1, r4, r0
 8000b8e:	4628      	mov	r0, r5
 8000b90:	f000 fb6a 	bl	8001268 <_sbrk_r>
 8000b94:	3001      	adds	r0, #1
 8000b96:	d101      	bne.n	8000b9c <sbrk_aligned+0x38>
 8000b98:	f04f 34ff 	mov.w	r4, #4294967295
 8000b9c:	4620      	mov	r0, r4
 8000b9e:	bd70      	pop	{r4, r5, r6, pc}
 8000ba0:	2000008c 	.word	0x2000008c

08000ba4 <_malloc_r>:
 8000ba4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ba8:	1ccd      	adds	r5, r1, #3
 8000baa:	f025 0503 	bic.w	r5, r5, #3
 8000bae:	3508      	adds	r5, #8
 8000bb0:	2d0c      	cmp	r5, #12
 8000bb2:	bf38      	it	cc
 8000bb4:	250c      	movcc	r5, #12
 8000bb6:	2d00      	cmp	r5, #0
 8000bb8:	4607      	mov	r7, r0
 8000bba:	db01      	blt.n	8000bc0 <_malloc_r+0x1c>
 8000bbc:	42a9      	cmp	r1, r5
 8000bbe:	d905      	bls.n	8000bcc <_malloc_r+0x28>
 8000bc0:	230c      	movs	r3, #12
 8000bc2:	2600      	movs	r6, #0
 8000bc4:	603b      	str	r3, [r7, #0]
 8000bc6:	4630      	mov	r0, r6
 8000bc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000bcc:	4e2e      	ldr	r6, [pc, #184]	; (8000c88 <_malloc_r+0xe4>)
 8000bce:	f000 fc03 	bl	80013d8 <__malloc_lock>
 8000bd2:	6833      	ldr	r3, [r6, #0]
 8000bd4:	461c      	mov	r4, r3
 8000bd6:	bb34      	cbnz	r4, 8000c26 <_malloc_r+0x82>
 8000bd8:	4629      	mov	r1, r5
 8000bda:	4638      	mov	r0, r7
 8000bdc:	f7ff ffc2 	bl	8000b64 <sbrk_aligned>
 8000be0:	1c43      	adds	r3, r0, #1
 8000be2:	4604      	mov	r4, r0
 8000be4:	d14d      	bne.n	8000c82 <_malloc_r+0xde>
 8000be6:	6834      	ldr	r4, [r6, #0]
 8000be8:	4626      	mov	r6, r4
 8000bea:	2e00      	cmp	r6, #0
 8000bec:	d140      	bne.n	8000c70 <_malloc_r+0xcc>
 8000bee:	6823      	ldr	r3, [r4, #0]
 8000bf0:	4631      	mov	r1, r6
 8000bf2:	4638      	mov	r0, r7
 8000bf4:	eb04 0803 	add.w	r8, r4, r3
 8000bf8:	f000 fb36 	bl	8001268 <_sbrk_r>
 8000bfc:	4580      	cmp	r8, r0
 8000bfe:	d13a      	bne.n	8000c76 <_malloc_r+0xd2>
 8000c00:	6821      	ldr	r1, [r4, #0]
 8000c02:	3503      	adds	r5, #3
 8000c04:	1a6d      	subs	r5, r5, r1
 8000c06:	f025 0503 	bic.w	r5, r5, #3
 8000c0a:	3508      	adds	r5, #8
 8000c0c:	2d0c      	cmp	r5, #12
 8000c0e:	bf38      	it	cc
 8000c10:	250c      	movcc	r5, #12
 8000c12:	4638      	mov	r0, r7
 8000c14:	4629      	mov	r1, r5
 8000c16:	f7ff ffa5 	bl	8000b64 <sbrk_aligned>
 8000c1a:	3001      	adds	r0, #1
 8000c1c:	d02b      	beq.n	8000c76 <_malloc_r+0xd2>
 8000c1e:	6823      	ldr	r3, [r4, #0]
 8000c20:	442b      	add	r3, r5
 8000c22:	6023      	str	r3, [r4, #0]
 8000c24:	e00e      	b.n	8000c44 <_malloc_r+0xa0>
 8000c26:	6822      	ldr	r2, [r4, #0]
 8000c28:	1b52      	subs	r2, r2, r5
 8000c2a:	d41e      	bmi.n	8000c6a <_malloc_r+0xc6>
 8000c2c:	2a0b      	cmp	r2, #11
 8000c2e:	d916      	bls.n	8000c5e <_malloc_r+0xba>
 8000c30:	1961      	adds	r1, r4, r5
 8000c32:	42a3      	cmp	r3, r4
 8000c34:	6025      	str	r5, [r4, #0]
 8000c36:	bf18      	it	ne
 8000c38:	6059      	strne	r1, [r3, #4]
 8000c3a:	6863      	ldr	r3, [r4, #4]
 8000c3c:	bf08      	it	eq
 8000c3e:	6031      	streq	r1, [r6, #0]
 8000c40:	5162      	str	r2, [r4, r5]
 8000c42:	604b      	str	r3, [r1, #4]
 8000c44:	4638      	mov	r0, r7
 8000c46:	f104 060b 	add.w	r6, r4, #11
 8000c4a:	f000 fbcb 	bl	80013e4 <__malloc_unlock>
 8000c4e:	f026 0607 	bic.w	r6, r6, #7
 8000c52:	1d23      	adds	r3, r4, #4
 8000c54:	1af2      	subs	r2, r6, r3
 8000c56:	d0b6      	beq.n	8000bc6 <_malloc_r+0x22>
 8000c58:	1b9b      	subs	r3, r3, r6
 8000c5a:	50a3      	str	r3, [r4, r2]
 8000c5c:	e7b3      	b.n	8000bc6 <_malloc_r+0x22>
 8000c5e:	6862      	ldr	r2, [r4, #4]
 8000c60:	42a3      	cmp	r3, r4
 8000c62:	bf0c      	ite	eq
 8000c64:	6032      	streq	r2, [r6, #0]
 8000c66:	605a      	strne	r2, [r3, #4]
 8000c68:	e7ec      	b.n	8000c44 <_malloc_r+0xa0>
 8000c6a:	4623      	mov	r3, r4
 8000c6c:	6864      	ldr	r4, [r4, #4]
 8000c6e:	e7b2      	b.n	8000bd6 <_malloc_r+0x32>
 8000c70:	4634      	mov	r4, r6
 8000c72:	6876      	ldr	r6, [r6, #4]
 8000c74:	e7b9      	b.n	8000bea <_malloc_r+0x46>
 8000c76:	230c      	movs	r3, #12
 8000c78:	4638      	mov	r0, r7
 8000c7a:	603b      	str	r3, [r7, #0]
 8000c7c:	f000 fbb2 	bl	80013e4 <__malloc_unlock>
 8000c80:	e7a1      	b.n	8000bc6 <_malloc_r+0x22>
 8000c82:	6025      	str	r5, [r4, #0]
 8000c84:	e7de      	b.n	8000c44 <_malloc_r+0xa0>
 8000c86:	bf00      	nop
 8000c88:	20000088 	.word	0x20000088

08000c8c <__sfputc_r>:
 8000c8c:	6893      	ldr	r3, [r2, #8]
 8000c8e:	b410      	push	{r4}
 8000c90:	3b01      	subs	r3, #1
 8000c92:	2b00      	cmp	r3, #0
 8000c94:	6093      	str	r3, [r2, #8]
 8000c96:	da07      	bge.n	8000ca8 <__sfputc_r+0x1c>
 8000c98:	6994      	ldr	r4, [r2, #24]
 8000c9a:	42a3      	cmp	r3, r4
 8000c9c:	db01      	blt.n	8000ca2 <__sfputc_r+0x16>
 8000c9e:	290a      	cmp	r1, #10
 8000ca0:	d102      	bne.n	8000ca8 <__sfputc_r+0x1c>
 8000ca2:	bc10      	pop	{r4}
 8000ca4:	f7ff bc3a 	b.w	800051c <__swbuf_r>
 8000ca8:	6813      	ldr	r3, [r2, #0]
 8000caa:	1c58      	adds	r0, r3, #1
 8000cac:	6010      	str	r0, [r2, #0]
 8000cae:	7019      	strb	r1, [r3, #0]
 8000cb0:	4608      	mov	r0, r1
 8000cb2:	bc10      	pop	{r4}
 8000cb4:	4770      	bx	lr

08000cb6 <__sfputs_r>:
 8000cb6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cb8:	4606      	mov	r6, r0
 8000cba:	460f      	mov	r7, r1
 8000cbc:	4614      	mov	r4, r2
 8000cbe:	18d5      	adds	r5, r2, r3
 8000cc0:	42ac      	cmp	r4, r5
 8000cc2:	d101      	bne.n	8000cc8 <__sfputs_r+0x12>
 8000cc4:	2000      	movs	r0, #0
 8000cc6:	e007      	b.n	8000cd8 <__sfputs_r+0x22>
 8000cc8:	463a      	mov	r2, r7
 8000cca:	4630      	mov	r0, r6
 8000ccc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cd0:	f7ff ffdc 	bl	8000c8c <__sfputc_r>
 8000cd4:	1c43      	adds	r3, r0, #1
 8000cd6:	d1f3      	bne.n	8000cc0 <__sfputs_r+0xa>
 8000cd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cdc <_vfiprintf_r>:
 8000cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ce0:	460d      	mov	r5, r1
 8000ce2:	4614      	mov	r4, r2
 8000ce4:	4698      	mov	r8, r3
 8000ce6:	4606      	mov	r6, r0
 8000ce8:	b09d      	sub	sp, #116	; 0x74
 8000cea:	b118      	cbz	r0, 8000cf4 <_vfiprintf_r+0x18>
 8000cec:	6983      	ldr	r3, [r0, #24]
 8000cee:	b90b      	cbnz	r3, 8000cf4 <_vfiprintf_r+0x18>
 8000cf0:	f7ff fdea 	bl	80008c8 <__sinit>
 8000cf4:	4b89      	ldr	r3, [pc, #548]	; (8000f1c <_vfiprintf_r+0x240>)
 8000cf6:	429d      	cmp	r5, r3
 8000cf8:	d11b      	bne.n	8000d32 <_vfiprintf_r+0x56>
 8000cfa:	6875      	ldr	r5, [r6, #4]
 8000cfc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cfe:	07d9      	lsls	r1, r3, #31
 8000d00:	d405      	bmi.n	8000d0e <_vfiprintf_r+0x32>
 8000d02:	89ab      	ldrh	r3, [r5, #12]
 8000d04:	059a      	lsls	r2, r3, #22
 8000d06:	d402      	bmi.n	8000d0e <_vfiprintf_r+0x32>
 8000d08:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d0a:	f7ff fe7b 	bl	8000a04 <__retarget_lock_acquire_recursive>
 8000d0e:	89ab      	ldrh	r3, [r5, #12]
 8000d10:	071b      	lsls	r3, r3, #28
 8000d12:	d501      	bpl.n	8000d18 <_vfiprintf_r+0x3c>
 8000d14:	692b      	ldr	r3, [r5, #16]
 8000d16:	b9eb      	cbnz	r3, 8000d54 <_vfiprintf_r+0x78>
 8000d18:	4629      	mov	r1, r5
 8000d1a:	4630      	mov	r0, r6
 8000d1c:	f7ff fc50 	bl	80005c0 <__swsetup_r>
 8000d20:	b1c0      	cbz	r0, 8000d54 <_vfiprintf_r+0x78>
 8000d22:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000d24:	07dc      	lsls	r4, r3, #31
 8000d26:	d50e      	bpl.n	8000d46 <_vfiprintf_r+0x6a>
 8000d28:	f04f 30ff 	mov.w	r0, #4294967295
 8000d2c:	b01d      	add	sp, #116	; 0x74
 8000d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d32:	4b7b      	ldr	r3, [pc, #492]	; (8000f20 <_vfiprintf_r+0x244>)
 8000d34:	429d      	cmp	r5, r3
 8000d36:	d101      	bne.n	8000d3c <_vfiprintf_r+0x60>
 8000d38:	68b5      	ldr	r5, [r6, #8]
 8000d3a:	e7df      	b.n	8000cfc <_vfiprintf_r+0x20>
 8000d3c:	4b79      	ldr	r3, [pc, #484]	; (8000f24 <_vfiprintf_r+0x248>)
 8000d3e:	429d      	cmp	r5, r3
 8000d40:	bf08      	it	eq
 8000d42:	68f5      	ldreq	r5, [r6, #12]
 8000d44:	e7da      	b.n	8000cfc <_vfiprintf_r+0x20>
 8000d46:	89ab      	ldrh	r3, [r5, #12]
 8000d48:	0598      	lsls	r0, r3, #22
 8000d4a:	d4ed      	bmi.n	8000d28 <_vfiprintf_r+0x4c>
 8000d4c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d4e:	f7ff fe5a 	bl	8000a06 <__retarget_lock_release_recursive>
 8000d52:	e7e9      	b.n	8000d28 <_vfiprintf_r+0x4c>
 8000d54:	2300      	movs	r3, #0
 8000d56:	9309      	str	r3, [sp, #36]	; 0x24
 8000d58:	2320      	movs	r3, #32
 8000d5a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000d5e:	2330      	movs	r3, #48	; 0x30
 8000d60:	f04f 0901 	mov.w	r9, #1
 8000d64:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d68:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8000f28 <_vfiprintf_r+0x24c>
 8000d6c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000d70:	4623      	mov	r3, r4
 8000d72:	469a      	mov	sl, r3
 8000d74:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d78:	b10a      	cbz	r2, 8000d7e <_vfiprintf_r+0xa2>
 8000d7a:	2a25      	cmp	r2, #37	; 0x25
 8000d7c:	d1f9      	bne.n	8000d72 <_vfiprintf_r+0x96>
 8000d7e:	ebba 0b04 	subs.w	fp, sl, r4
 8000d82:	d00b      	beq.n	8000d9c <_vfiprintf_r+0xc0>
 8000d84:	465b      	mov	r3, fp
 8000d86:	4622      	mov	r2, r4
 8000d88:	4629      	mov	r1, r5
 8000d8a:	4630      	mov	r0, r6
 8000d8c:	f7ff ff93 	bl	8000cb6 <__sfputs_r>
 8000d90:	3001      	adds	r0, #1
 8000d92:	f000 80aa 	beq.w	8000eea <_vfiprintf_r+0x20e>
 8000d96:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000d98:	445a      	add	r2, fp
 8000d9a:	9209      	str	r2, [sp, #36]	; 0x24
 8000d9c:	f89a 3000 	ldrb.w	r3, [sl]
 8000da0:	2b00      	cmp	r3, #0
 8000da2:	f000 80a2 	beq.w	8000eea <_vfiprintf_r+0x20e>
 8000da6:	2300      	movs	r3, #0
 8000da8:	f04f 32ff 	mov.w	r2, #4294967295
 8000dac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000db0:	f10a 0a01 	add.w	sl, sl, #1
 8000db4:	9304      	str	r3, [sp, #16]
 8000db6:	9307      	str	r3, [sp, #28]
 8000db8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000dbc:	931a      	str	r3, [sp, #104]	; 0x68
 8000dbe:	4654      	mov	r4, sl
 8000dc0:	2205      	movs	r2, #5
 8000dc2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dc6:	4858      	ldr	r0, [pc, #352]	; (8000f28 <_vfiprintf_r+0x24c>)
 8000dc8:	f000 faf8 	bl	80013bc <memchr>
 8000dcc:	9a04      	ldr	r2, [sp, #16]
 8000dce:	b9d8      	cbnz	r0, 8000e08 <_vfiprintf_r+0x12c>
 8000dd0:	06d1      	lsls	r1, r2, #27
 8000dd2:	bf44      	itt	mi
 8000dd4:	2320      	movmi	r3, #32
 8000dd6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000dda:	0713      	lsls	r3, r2, #28
 8000ddc:	bf44      	itt	mi
 8000dde:	232b      	movmi	r3, #43	; 0x2b
 8000de0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000de4:	f89a 3000 	ldrb.w	r3, [sl]
 8000de8:	2b2a      	cmp	r3, #42	; 0x2a
 8000dea:	d015      	beq.n	8000e18 <_vfiprintf_r+0x13c>
 8000dec:	4654      	mov	r4, sl
 8000dee:	2000      	movs	r0, #0
 8000df0:	f04f 0c0a 	mov.w	ip, #10
 8000df4:	9a07      	ldr	r2, [sp, #28]
 8000df6:	4621      	mov	r1, r4
 8000df8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000dfc:	3b30      	subs	r3, #48	; 0x30
 8000dfe:	2b09      	cmp	r3, #9
 8000e00:	d94e      	bls.n	8000ea0 <_vfiprintf_r+0x1c4>
 8000e02:	b1b0      	cbz	r0, 8000e32 <_vfiprintf_r+0x156>
 8000e04:	9207      	str	r2, [sp, #28]
 8000e06:	e014      	b.n	8000e32 <_vfiprintf_r+0x156>
 8000e08:	eba0 0308 	sub.w	r3, r0, r8
 8000e0c:	fa09 f303 	lsl.w	r3, r9, r3
 8000e10:	4313      	orrs	r3, r2
 8000e12:	46a2      	mov	sl, r4
 8000e14:	9304      	str	r3, [sp, #16]
 8000e16:	e7d2      	b.n	8000dbe <_vfiprintf_r+0xe2>
 8000e18:	9b03      	ldr	r3, [sp, #12]
 8000e1a:	1d19      	adds	r1, r3, #4
 8000e1c:	681b      	ldr	r3, [r3, #0]
 8000e1e:	9103      	str	r1, [sp, #12]
 8000e20:	2b00      	cmp	r3, #0
 8000e22:	bfbb      	ittet	lt
 8000e24:	425b      	neglt	r3, r3
 8000e26:	f042 0202 	orrlt.w	r2, r2, #2
 8000e2a:	9307      	strge	r3, [sp, #28]
 8000e2c:	9307      	strlt	r3, [sp, #28]
 8000e2e:	bfb8      	it	lt
 8000e30:	9204      	strlt	r2, [sp, #16]
 8000e32:	7823      	ldrb	r3, [r4, #0]
 8000e34:	2b2e      	cmp	r3, #46	; 0x2e
 8000e36:	d10c      	bne.n	8000e52 <_vfiprintf_r+0x176>
 8000e38:	7863      	ldrb	r3, [r4, #1]
 8000e3a:	2b2a      	cmp	r3, #42	; 0x2a
 8000e3c:	d135      	bne.n	8000eaa <_vfiprintf_r+0x1ce>
 8000e3e:	9b03      	ldr	r3, [sp, #12]
 8000e40:	3402      	adds	r4, #2
 8000e42:	1d1a      	adds	r2, r3, #4
 8000e44:	681b      	ldr	r3, [r3, #0]
 8000e46:	9203      	str	r2, [sp, #12]
 8000e48:	2b00      	cmp	r3, #0
 8000e4a:	bfb8      	it	lt
 8000e4c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000e50:	9305      	str	r3, [sp, #20]
 8000e52:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8000f2c <_vfiprintf_r+0x250>
 8000e56:	2203      	movs	r2, #3
 8000e58:	4650      	mov	r0, sl
 8000e5a:	7821      	ldrb	r1, [r4, #0]
 8000e5c:	f000 faae 	bl	80013bc <memchr>
 8000e60:	b140      	cbz	r0, 8000e74 <_vfiprintf_r+0x198>
 8000e62:	2340      	movs	r3, #64	; 0x40
 8000e64:	eba0 000a 	sub.w	r0, r0, sl
 8000e68:	fa03 f000 	lsl.w	r0, r3, r0
 8000e6c:	9b04      	ldr	r3, [sp, #16]
 8000e6e:	3401      	adds	r4, #1
 8000e70:	4303      	orrs	r3, r0
 8000e72:	9304      	str	r3, [sp, #16]
 8000e74:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e78:	2206      	movs	r2, #6
 8000e7a:	482d      	ldr	r0, [pc, #180]	; (8000f30 <_vfiprintf_r+0x254>)
 8000e7c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000e80:	f000 fa9c 	bl	80013bc <memchr>
 8000e84:	2800      	cmp	r0, #0
 8000e86:	d03f      	beq.n	8000f08 <_vfiprintf_r+0x22c>
 8000e88:	4b2a      	ldr	r3, [pc, #168]	; (8000f34 <_vfiprintf_r+0x258>)
 8000e8a:	bb1b      	cbnz	r3, 8000ed4 <_vfiprintf_r+0x1f8>
 8000e8c:	9b03      	ldr	r3, [sp, #12]
 8000e8e:	3307      	adds	r3, #7
 8000e90:	f023 0307 	bic.w	r3, r3, #7
 8000e94:	3308      	adds	r3, #8
 8000e96:	9303      	str	r3, [sp, #12]
 8000e98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e9a:	443b      	add	r3, r7
 8000e9c:	9309      	str	r3, [sp, #36]	; 0x24
 8000e9e:	e767      	b.n	8000d70 <_vfiprintf_r+0x94>
 8000ea0:	460c      	mov	r4, r1
 8000ea2:	2001      	movs	r0, #1
 8000ea4:	fb0c 3202 	mla	r2, ip, r2, r3
 8000ea8:	e7a5      	b.n	8000df6 <_vfiprintf_r+0x11a>
 8000eaa:	2300      	movs	r3, #0
 8000eac:	f04f 0c0a 	mov.w	ip, #10
 8000eb0:	4619      	mov	r1, r3
 8000eb2:	3401      	adds	r4, #1
 8000eb4:	9305      	str	r3, [sp, #20]
 8000eb6:	4620      	mov	r0, r4
 8000eb8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ebc:	3a30      	subs	r2, #48	; 0x30
 8000ebe:	2a09      	cmp	r2, #9
 8000ec0:	d903      	bls.n	8000eca <_vfiprintf_r+0x1ee>
 8000ec2:	2b00      	cmp	r3, #0
 8000ec4:	d0c5      	beq.n	8000e52 <_vfiprintf_r+0x176>
 8000ec6:	9105      	str	r1, [sp, #20]
 8000ec8:	e7c3      	b.n	8000e52 <_vfiprintf_r+0x176>
 8000eca:	4604      	mov	r4, r0
 8000ecc:	2301      	movs	r3, #1
 8000ece:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ed2:	e7f0      	b.n	8000eb6 <_vfiprintf_r+0x1da>
 8000ed4:	ab03      	add	r3, sp, #12
 8000ed6:	9300      	str	r3, [sp, #0]
 8000ed8:	462a      	mov	r2, r5
 8000eda:	4630      	mov	r0, r6
 8000edc:	4b16      	ldr	r3, [pc, #88]	; (8000f38 <_vfiprintf_r+0x25c>)
 8000ede:	a904      	add	r1, sp, #16
 8000ee0:	f3af 8000 	nop.w
 8000ee4:	4607      	mov	r7, r0
 8000ee6:	1c78      	adds	r0, r7, #1
 8000ee8:	d1d6      	bne.n	8000e98 <_vfiprintf_r+0x1bc>
 8000eea:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000eec:	07d9      	lsls	r1, r3, #31
 8000eee:	d405      	bmi.n	8000efc <_vfiprintf_r+0x220>
 8000ef0:	89ab      	ldrh	r3, [r5, #12]
 8000ef2:	059a      	lsls	r2, r3, #22
 8000ef4:	d402      	bmi.n	8000efc <_vfiprintf_r+0x220>
 8000ef6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ef8:	f7ff fd85 	bl	8000a06 <__retarget_lock_release_recursive>
 8000efc:	89ab      	ldrh	r3, [r5, #12]
 8000efe:	065b      	lsls	r3, r3, #25
 8000f00:	f53f af12 	bmi.w	8000d28 <_vfiprintf_r+0x4c>
 8000f04:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000f06:	e711      	b.n	8000d2c <_vfiprintf_r+0x50>
 8000f08:	ab03      	add	r3, sp, #12
 8000f0a:	9300      	str	r3, [sp, #0]
 8000f0c:	462a      	mov	r2, r5
 8000f0e:	4630      	mov	r0, r6
 8000f10:	4b09      	ldr	r3, [pc, #36]	; (8000f38 <_vfiprintf_r+0x25c>)
 8000f12:	a904      	add	r1, sp, #16
 8000f14:	f000 f882 	bl	800101c <_printf_i>
 8000f18:	e7e4      	b.n	8000ee4 <_vfiprintf_r+0x208>
 8000f1a:	bf00      	nop
 8000f1c:	08001460 	.word	0x08001460
 8000f20:	08001480 	.word	0x08001480
 8000f24:	08001440 	.word	0x08001440
 8000f28:	080014a0 	.word	0x080014a0
 8000f2c:	080014a6 	.word	0x080014a6
 8000f30:	080014aa 	.word	0x080014aa
 8000f34:	00000000 	.word	0x00000000
 8000f38:	08000cb7 	.word	0x08000cb7

08000f3c <_printf_common>:
 8000f3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f40:	4616      	mov	r6, r2
 8000f42:	4699      	mov	r9, r3
 8000f44:	688a      	ldr	r2, [r1, #8]
 8000f46:	690b      	ldr	r3, [r1, #16]
 8000f48:	4607      	mov	r7, r0
 8000f4a:	4293      	cmp	r3, r2
 8000f4c:	bfb8      	it	lt
 8000f4e:	4613      	movlt	r3, r2
 8000f50:	6033      	str	r3, [r6, #0]
 8000f52:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000f56:	460c      	mov	r4, r1
 8000f58:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000f5c:	b10a      	cbz	r2, 8000f62 <_printf_common+0x26>
 8000f5e:	3301      	adds	r3, #1
 8000f60:	6033      	str	r3, [r6, #0]
 8000f62:	6823      	ldr	r3, [r4, #0]
 8000f64:	0699      	lsls	r1, r3, #26
 8000f66:	bf42      	ittt	mi
 8000f68:	6833      	ldrmi	r3, [r6, #0]
 8000f6a:	3302      	addmi	r3, #2
 8000f6c:	6033      	strmi	r3, [r6, #0]
 8000f6e:	6825      	ldr	r5, [r4, #0]
 8000f70:	f015 0506 	ands.w	r5, r5, #6
 8000f74:	d106      	bne.n	8000f84 <_printf_common+0x48>
 8000f76:	f104 0a19 	add.w	sl, r4, #25
 8000f7a:	68e3      	ldr	r3, [r4, #12]
 8000f7c:	6832      	ldr	r2, [r6, #0]
 8000f7e:	1a9b      	subs	r3, r3, r2
 8000f80:	42ab      	cmp	r3, r5
 8000f82:	dc28      	bgt.n	8000fd6 <_printf_common+0x9a>
 8000f84:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000f88:	1e13      	subs	r3, r2, #0
 8000f8a:	6822      	ldr	r2, [r4, #0]
 8000f8c:	bf18      	it	ne
 8000f8e:	2301      	movne	r3, #1
 8000f90:	0692      	lsls	r2, r2, #26
 8000f92:	d42d      	bmi.n	8000ff0 <_printf_common+0xb4>
 8000f94:	4649      	mov	r1, r9
 8000f96:	4638      	mov	r0, r7
 8000f98:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000f9c:	47c0      	blx	r8
 8000f9e:	3001      	adds	r0, #1
 8000fa0:	d020      	beq.n	8000fe4 <_printf_common+0xa8>
 8000fa2:	6823      	ldr	r3, [r4, #0]
 8000fa4:	68e5      	ldr	r5, [r4, #12]
 8000fa6:	f003 0306 	and.w	r3, r3, #6
 8000faa:	2b04      	cmp	r3, #4
 8000fac:	bf18      	it	ne
 8000fae:	2500      	movne	r5, #0
 8000fb0:	6832      	ldr	r2, [r6, #0]
 8000fb2:	f04f 0600 	mov.w	r6, #0
 8000fb6:	68a3      	ldr	r3, [r4, #8]
 8000fb8:	bf08      	it	eq
 8000fba:	1aad      	subeq	r5, r5, r2
 8000fbc:	6922      	ldr	r2, [r4, #16]
 8000fbe:	bf08      	it	eq
 8000fc0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000fc4:	4293      	cmp	r3, r2
 8000fc6:	bfc4      	itt	gt
 8000fc8:	1a9b      	subgt	r3, r3, r2
 8000fca:	18ed      	addgt	r5, r5, r3
 8000fcc:	341a      	adds	r4, #26
 8000fce:	42b5      	cmp	r5, r6
 8000fd0:	d11a      	bne.n	8001008 <_printf_common+0xcc>
 8000fd2:	2000      	movs	r0, #0
 8000fd4:	e008      	b.n	8000fe8 <_printf_common+0xac>
 8000fd6:	2301      	movs	r3, #1
 8000fd8:	4652      	mov	r2, sl
 8000fda:	4649      	mov	r1, r9
 8000fdc:	4638      	mov	r0, r7
 8000fde:	47c0      	blx	r8
 8000fe0:	3001      	adds	r0, #1
 8000fe2:	d103      	bne.n	8000fec <_printf_common+0xb0>
 8000fe4:	f04f 30ff 	mov.w	r0, #4294967295
 8000fe8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fec:	3501      	adds	r5, #1
 8000fee:	e7c4      	b.n	8000f7a <_printf_common+0x3e>
 8000ff0:	2030      	movs	r0, #48	; 0x30
 8000ff2:	18e1      	adds	r1, r4, r3
 8000ff4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000ff8:	1c5a      	adds	r2, r3, #1
 8000ffa:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000ffe:	4422      	add	r2, r4
 8001000:	3302      	adds	r3, #2
 8001002:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001006:	e7c5      	b.n	8000f94 <_printf_common+0x58>
 8001008:	2301      	movs	r3, #1
 800100a:	4622      	mov	r2, r4
 800100c:	4649      	mov	r1, r9
 800100e:	4638      	mov	r0, r7
 8001010:	47c0      	blx	r8
 8001012:	3001      	adds	r0, #1
 8001014:	d0e6      	beq.n	8000fe4 <_printf_common+0xa8>
 8001016:	3601      	adds	r6, #1
 8001018:	e7d9      	b.n	8000fce <_printf_common+0x92>
	...

0800101c <_printf_i>:
 800101c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001020:	7e0f      	ldrb	r7, [r1, #24]
 8001022:	4691      	mov	r9, r2
 8001024:	2f78      	cmp	r7, #120	; 0x78
 8001026:	4680      	mov	r8, r0
 8001028:	460c      	mov	r4, r1
 800102a:	469a      	mov	sl, r3
 800102c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800102e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001032:	d807      	bhi.n	8001044 <_printf_i+0x28>
 8001034:	2f62      	cmp	r7, #98	; 0x62
 8001036:	d80a      	bhi.n	800104e <_printf_i+0x32>
 8001038:	2f00      	cmp	r7, #0
 800103a:	f000 80d9 	beq.w	80011f0 <_printf_i+0x1d4>
 800103e:	2f58      	cmp	r7, #88	; 0x58
 8001040:	f000 80a4 	beq.w	800118c <_printf_i+0x170>
 8001044:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001048:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800104c:	e03a      	b.n	80010c4 <_printf_i+0xa8>
 800104e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001052:	2b15      	cmp	r3, #21
 8001054:	d8f6      	bhi.n	8001044 <_printf_i+0x28>
 8001056:	a101      	add	r1, pc, #4	; (adr r1, 800105c <_printf_i+0x40>)
 8001058:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800105c:	080010b5 	.word	0x080010b5
 8001060:	080010c9 	.word	0x080010c9
 8001064:	08001045 	.word	0x08001045
 8001068:	08001045 	.word	0x08001045
 800106c:	08001045 	.word	0x08001045
 8001070:	08001045 	.word	0x08001045
 8001074:	080010c9 	.word	0x080010c9
 8001078:	08001045 	.word	0x08001045
 800107c:	08001045 	.word	0x08001045
 8001080:	08001045 	.word	0x08001045
 8001084:	08001045 	.word	0x08001045
 8001088:	080011d7 	.word	0x080011d7
 800108c:	080010f9 	.word	0x080010f9
 8001090:	080011b9 	.word	0x080011b9
 8001094:	08001045 	.word	0x08001045
 8001098:	08001045 	.word	0x08001045
 800109c:	080011f9 	.word	0x080011f9
 80010a0:	08001045 	.word	0x08001045
 80010a4:	080010f9 	.word	0x080010f9
 80010a8:	08001045 	.word	0x08001045
 80010ac:	08001045 	.word	0x08001045
 80010b0:	080011c1 	.word	0x080011c1
 80010b4:	682b      	ldr	r3, [r5, #0]
 80010b6:	1d1a      	adds	r2, r3, #4
 80010b8:	681b      	ldr	r3, [r3, #0]
 80010ba:	602a      	str	r2, [r5, #0]
 80010bc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80010c0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80010c4:	2301      	movs	r3, #1
 80010c6:	e0a4      	b.n	8001212 <_printf_i+0x1f6>
 80010c8:	6820      	ldr	r0, [r4, #0]
 80010ca:	6829      	ldr	r1, [r5, #0]
 80010cc:	0606      	lsls	r6, r0, #24
 80010ce:	f101 0304 	add.w	r3, r1, #4
 80010d2:	d50a      	bpl.n	80010ea <_printf_i+0xce>
 80010d4:	680e      	ldr	r6, [r1, #0]
 80010d6:	602b      	str	r3, [r5, #0]
 80010d8:	2e00      	cmp	r6, #0
 80010da:	da03      	bge.n	80010e4 <_printf_i+0xc8>
 80010dc:	232d      	movs	r3, #45	; 0x2d
 80010de:	4276      	negs	r6, r6
 80010e0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80010e4:	230a      	movs	r3, #10
 80010e6:	485e      	ldr	r0, [pc, #376]	; (8001260 <_printf_i+0x244>)
 80010e8:	e019      	b.n	800111e <_printf_i+0x102>
 80010ea:	680e      	ldr	r6, [r1, #0]
 80010ec:	f010 0f40 	tst.w	r0, #64	; 0x40
 80010f0:	602b      	str	r3, [r5, #0]
 80010f2:	bf18      	it	ne
 80010f4:	b236      	sxthne	r6, r6
 80010f6:	e7ef      	b.n	80010d8 <_printf_i+0xbc>
 80010f8:	682b      	ldr	r3, [r5, #0]
 80010fa:	6820      	ldr	r0, [r4, #0]
 80010fc:	1d19      	adds	r1, r3, #4
 80010fe:	6029      	str	r1, [r5, #0]
 8001100:	0601      	lsls	r1, r0, #24
 8001102:	d501      	bpl.n	8001108 <_printf_i+0xec>
 8001104:	681e      	ldr	r6, [r3, #0]
 8001106:	e002      	b.n	800110e <_printf_i+0xf2>
 8001108:	0646      	lsls	r6, r0, #25
 800110a:	d5fb      	bpl.n	8001104 <_printf_i+0xe8>
 800110c:	881e      	ldrh	r6, [r3, #0]
 800110e:	2f6f      	cmp	r7, #111	; 0x6f
 8001110:	bf0c      	ite	eq
 8001112:	2308      	moveq	r3, #8
 8001114:	230a      	movne	r3, #10
 8001116:	4852      	ldr	r0, [pc, #328]	; (8001260 <_printf_i+0x244>)
 8001118:	2100      	movs	r1, #0
 800111a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800111e:	6865      	ldr	r5, [r4, #4]
 8001120:	2d00      	cmp	r5, #0
 8001122:	bfa8      	it	ge
 8001124:	6821      	ldrge	r1, [r4, #0]
 8001126:	60a5      	str	r5, [r4, #8]
 8001128:	bfa4      	itt	ge
 800112a:	f021 0104 	bicge.w	r1, r1, #4
 800112e:	6021      	strge	r1, [r4, #0]
 8001130:	b90e      	cbnz	r6, 8001136 <_printf_i+0x11a>
 8001132:	2d00      	cmp	r5, #0
 8001134:	d04d      	beq.n	80011d2 <_printf_i+0x1b6>
 8001136:	4615      	mov	r5, r2
 8001138:	fbb6 f1f3 	udiv	r1, r6, r3
 800113c:	fb03 6711 	mls	r7, r3, r1, r6
 8001140:	5dc7      	ldrb	r7, [r0, r7]
 8001142:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001146:	4637      	mov	r7, r6
 8001148:	42bb      	cmp	r3, r7
 800114a:	460e      	mov	r6, r1
 800114c:	d9f4      	bls.n	8001138 <_printf_i+0x11c>
 800114e:	2b08      	cmp	r3, #8
 8001150:	d10b      	bne.n	800116a <_printf_i+0x14e>
 8001152:	6823      	ldr	r3, [r4, #0]
 8001154:	07de      	lsls	r6, r3, #31
 8001156:	d508      	bpl.n	800116a <_printf_i+0x14e>
 8001158:	6923      	ldr	r3, [r4, #16]
 800115a:	6861      	ldr	r1, [r4, #4]
 800115c:	4299      	cmp	r1, r3
 800115e:	bfde      	ittt	le
 8001160:	2330      	movle	r3, #48	; 0x30
 8001162:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001166:	f105 35ff 	addle.w	r5, r5, #4294967295
 800116a:	1b52      	subs	r2, r2, r5
 800116c:	6122      	str	r2, [r4, #16]
 800116e:	464b      	mov	r3, r9
 8001170:	4621      	mov	r1, r4
 8001172:	4640      	mov	r0, r8
 8001174:	f8cd a000 	str.w	sl, [sp]
 8001178:	aa03      	add	r2, sp, #12
 800117a:	f7ff fedf 	bl	8000f3c <_printf_common>
 800117e:	3001      	adds	r0, #1
 8001180:	d14c      	bne.n	800121c <_printf_i+0x200>
 8001182:	f04f 30ff 	mov.w	r0, #4294967295
 8001186:	b004      	add	sp, #16
 8001188:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800118c:	4834      	ldr	r0, [pc, #208]	; (8001260 <_printf_i+0x244>)
 800118e:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001192:	6829      	ldr	r1, [r5, #0]
 8001194:	6823      	ldr	r3, [r4, #0]
 8001196:	f851 6b04 	ldr.w	r6, [r1], #4
 800119a:	6029      	str	r1, [r5, #0]
 800119c:	061d      	lsls	r5, r3, #24
 800119e:	d514      	bpl.n	80011ca <_printf_i+0x1ae>
 80011a0:	07df      	lsls	r7, r3, #31
 80011a2:	bf44      	itt	mi
 80011a4:	f043 0320 	orrmi.w	r3, r3, #32
 80011a8:	6023      	strmi	r3, [r4, #0]
 80011aa:	b91e      	cbnz	r6, 80011b4 <_printf_i+0x198>
 80011ac:	6823      	ldr	r3, [r4, #0]
 80011ae:	f023 0320 	bic.w	r3, r3, #32
 80011b2:	6023      	str	r3, [r4, #0]
 80011b4:	2310      	movs	r3, #16
 80011b6:	e7af      	b.n	8001118 <_printf_i+0xfc>
 80011b8:	6823      	ldr	r3, [r4, #0]
 80011ba:	f043 0320 	orr.w	r3, r3, #32
 80011be:	6023      	str	r3, [r4, #0]
 80011c0:	2378      	movs	r3, #120	; 0x78
 80011c2:	4828      	ldr	r0, [pc, #160]	; (8001264 <_printf_i+0x248>)
 80011c4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80011c8:	e7e3      	b.n	8001192 <_printf_i+0x176>
 80011ca:	0659      	lsls	r1, r3, #25
 80011cc:	bf48      	it	mi
 80011ce:	b2b6      	uxthmi	r6, r6
 80011d0:	e7e6      	b.n	80011a0 <_printf_i+0x184>
 80011d2:	4615      	mov	r5, r2
 80011d4:	e7bb      	b.n	800114e <_printf_i+0x132>
 80011d6:	682b      	ldr	r3, [r5, #0]
 80011d8:	6826      	ldr	r6, [r4, #0]
 80011da:	1d18      	adds	r0, r3, #4
 80011dc:	6961      	ldr	r1, [r4, #20]
 80011de:	6028      	str	r0, [r5, #0]
 80011e0:	0635      	lsls	r5, r6, #24
 80011e2:	681b      	ldr	r3, [r3, #0]
 80011e4:	d501      	bpl.n	80011ea <_printf_i+0x1ce>
 80011e6:	6019      	str	r1, [r3, #0]
 80011e8:	e002      	b.n	80011f0 <_printf_i+0x1d4>
 80011ea:	0670      	lsls	r0, r6, #25
 80011ec:	d5fb      	bpl.n	80011e6 <_printf_i+0x1ca>
 80011ee:	8019      	strh	r1, [r3, #0]
 80011f0:	2300      	movs	r3, #0
 80011f2:	4615      	mov	r5, r2
 80011f4:	6123      	str	r3, [r4, #16]
 80011f6:	e7ba      	b.n	800116e <_printf_i+0x152>
 80011f8:	682b      	ldr	r3, [r5, #0]
 80011fa:	2100      	movs	r1, #0
 80011fc:	1d1a      	adds	r2, r3, #4
 80011fe:	602a      	str	r2, [r5, #0]
 8001200:	681d      	ldr	r5, [r3, #0]
 8001202:	6862      	ldr	r2, [r4, #4]
 8001204:	4628      	mov	r0, r5
 8001206:	f000 f8d9 	bl	80013bc <memchr>
 800120a:	b108      	cbz	r0, 8001210 <_printf_i+0x1f4>
 800120c:	1b40      	subs	r0, r0, r5
 800120e:	6060      	str	r0, [r4, #4]
 8001210:	6863      	ldr	r3, [r4, #4]
 8001212:	6123      	str	r3, [r4, #16]
 8001214:	2300      	movs	r3, #0
 8001216:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800121a:	e7a8      	b.n	800116e <_printf_i+0x152>
 800121c:	462a      	mov	r2, r5
 800121e:	4649      	mov	r1, r9
 8001220:	4640      	mov	r0, r8
 8001222:	6923      	ldr	r3, [r4, #16]
 8001224:	47d0      	blx	sl
 8001226:	3001      	adds	r0, #1
 8001228:	d0ab      	beq.n	8001182 <_printf_i+0x166>
 800122a:	6823      	ldr	r3, [r4, #0]
 800122c:	079b      	lsls	r3, r3, #30
 800122e:	d413      	bmi.n	8001258 <_printf_i+0x23c>
 8001230:	68e0      	ldr	r0, [r4, #12]
 8001232:	9b03      	ldr	r3, [sp, #12]
 8001234:	4298      	cmp	r0, r3
 8001236:	bfb8      	it	lt
 8001238:	4618      	movlt	r0, r3
 800123a:	e7a4      	b.n	8001186 <_printf_i+0x16a>
 800123c:	2301      	movs	r3, #1
 800123e:	4632      	mov	r2, r6
 8001240:	4649      	mov	r1, r9
 8001242:	4640      	mov	r0, r8
 8001244:	47d0      	blx	sl
 8001246:	3001      	adds	r0, #1
 8001248:	d09b      	beq.n	8001182 <_printf_i+0x166>
 800124a:	3501      	adds	r5, #1
 800124c:	68e3      	ldr	r3, [r4, #12]
 800124e:	9903      	ldr	r1, [sp, #12]
 8001250:	1a5b      	subs	r3, r3, r1
 8001252:	42ab      	cmp	r3, r5
 8001254:	dcf2      	bgt.n	800123c <_printf_i+0x220>
 8001256:	e7eb      	b.n	8001230 <_printf_i+0x214>
 8001258:	2500      	movs	r5, #0
 800125a:	f104 0619 	add.w	r6, r4, #25
 800125e:	e7f5      	b.n	800124c <_printf_i+0x230>
 8001260:	080014b1 	.word	0x080014b1
 8001264:	080014c2 	.word	0x080014c2

08001268 <_sbrk_r>:
 8001268:	b538      	push	{r3, r4, r5, lr}
 800126a:	2300      	movs	r3, #0
 800126c:	4d05      	ldr	r5, [pc, #20]	; (8001284 <_sbrk_r+0x1c>)
 800126e:	4604      	mov	r4, r0
 8001270:	4608      	mov	r0, r1
 8001272:	602b      	str	r3, [r5, #0]
 8001274:	f7ff f832 	bl	80002dc <_sbrk>
 8001278:	1c43      	adds	r3, r0, #1
 800127a:	d102      	bne.n	8001282 <_sbrk_r+0x1a>
 800127c:	682b      	ldr	r3, [r5, #0]
 800127e:	b103      	cbz	r3, 8001282 <_sbrk_r+0x1a>
 8001280:	6023      	str	r3, [r4, #0]
 8001282:	bd38      	pop	{r3, r4, r5, pc}
 8001284:	20000090 	.word	0x20000090

08001288 <__sread>:
 8001288:	b510      	push	{r4, lr}
 800128a:	460c      	mov	r4, r1
 800128c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001290:	f000 f8ae 	bl	80013f0 <_read_r>
 8001294:	2800      	cmp	r0, #0
 8001296:	bfab      	itete	ge
 8001298:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800129a:	89a3      	ldrhlt	r3, [r4, #12]
 800129c:	181b      	addge	r3, r3, r0
 800129e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80012a2:	bfac      	ite	ge
 80012a4:	6563      	strge	r3, [r4, #84]	; 0x54
 80012a6:	81a3      	strhlt	r3, [r4, #12]
 80012a8:	bd10      	pop	{r4, pc}

080012aa <__swrite>:
 80012aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012ae:	461f      	mov	r7, r3
 80012b0:	898b      	ldrh	r3, [r1, #12]
 80012b2:	4605      	mov	r5, r0
 80012b4:	05db      	lsls	r3, r3, #23
 80012b6:	460c      	mov	r4, r1
 80012b8:	4616      	mov	r6, r2
 80012ba:	d505      	bpl.n	80012c8 <__swrite+0x1e>
 80012bc:	2302      	movs	r3, #2
 80012be:	2200      	movs	r2, #0
 80012c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012c4:	f000 f868 	bl	8001398 <_lseek_r>
 80012c8:	89a3      	ldrh	r3, [r4, #12]
 80012ca:	4632      	mov	r2, r6
 80012cc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80012d0:	81a3      	strh	r3, [r4, #12]
 80012d2:	4628      	mov	r0, r5
 80012d4:	463b      	mov	r3, r7
 80012d6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80012de:	f000 b817 	b.w	8001310 <_write_r>

080012e2 <__sseek>:
 80012e2:	b510      	push	{r4, lr}
 80012e4:	460c      	mov	r4, r1
 80012e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012ea:	f000 f855 	bl	8001398 <_lseek_r>
 80012ee:	1c43      	adds	r3, r0, #1
 80012f0:	89a3      	ldrh	r3, [r4, #12]
 80012f2:	bf15      	itete	ne
 80012f4:	6560      	strne	r0, [r4, #84]	; 0x54
 80012f6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80012fa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80012fe:	81a3      	strheq	r3, [r4, #12]
 8001300:	bf18      	it	ne
 8001302:	81a3      	strhne	r3, [r4, #12]
 8001304:	bd10      	pop	{r4, pc}

08001306 <__sclose>:
 8001306:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800130a:	f000 b813 	b.w	8001334 <_close_r>
	...

08001310 <_write_r>:
 8001310:	b538      	push	{r3, r4, r5, lr}
 8001312:	4604      	mov	r4, r0
 8001314:	4608      	mov	r0, r1
 8001316:	4611      	mov	r1, r2
 8001318:	2200      	movs	r2, #0
 800131a:	4d05      	ldr	r5, [pc, #20]	; (8001330 <_write_r+0x20>)
 800131c:	602a      	str	r2, [r5, #0]
 800131e:	461a      	mov	r2, r3
 8001320:	f7fe ff8f 	bl	8000242 <_write>
 8001324:	1c43      	adds	r3, r0, #1
 8001326:	d102      	bne.n	800132e <_write_r+0x1e>
 8001328:	682b      	ldr	r3, [r5, #0]
 800132a:	b103      	cbz	r3, 800132e <_write_r+0x1e>
 800132c:	6023      	str	r3, [r4, #0]
 800132e:	bd38      	pop	{r3, r4, r5, pc}
 8001330:	20000090 	.word	0x20000090

08001334 <_close_r>:
 8001334:	b538      	push	{r3, r4, r5, lr}
 8001336:	2300      	movs	r3, #0
 8001338:	4d05      	ldr	r5, [pc, #20]	; (8001350 <_close_r+0x1c>)
 800133a:	4604      	mov	r4, r0
 800133c:	4608      	mov	r0, r1
 800133e:	602b      	str	r3, [r5, #0]
 8001340:	f7fe ff9b 	bl	800027a <_close>
 8001344:	1c43      	adds	r3, r0, #1
 8001346:	d102      	bne.n	800134e <_close_r+0x1a>
 8001348:	682b      	ldr	r3, [r5, #0]
 800134a:	b103      	cbz	r3, 800134e <_close_r+0x1a>
 800134c:	6023      	str	r3, [r4, #0]
 800134e:	bd38      	pop	{r3, r4, r5, pc}
 8001350:	20000090 	.word	0x20000090

08001354 <_fstat_r>:
 8001354:	b538      	push	{r3, r4, r5, lr}
 8001356:	2300      	movs	r3, #0
 8001358:	4d06      	ldr	r5, [pc, #24]	; (8001374 <_fstat_r+0x20>)
 800135a:	4604      	mov	r4, r0
 800135c:	4608      	mov	r0, r1
 800135e:	4611      	mov	r1, r2
 8001360:	602b      	str	r3, [r5, #0]
 8001362:	f7fe ff95 	bl	8000290 <_fstat>
 8001366:	1c43      	adds	r3, r0, #1
 8001368:	d102      	bne.n	8001370 <_fstat_r+0x1c>
 800136a:	682b      	ldr	r3, [r5, #0]
 800136c:	b103      	cbz	r3, 8001370 <_fstat_r+0x1c>
 800136e:	6023      	str	r3, [r4, #0]
 8001370:	bd38      	pop	{r3, r4, r5, pc}
 8001372:	bf00      	nop
 8001374:	20000090 	.word	0x20000090

08001378 <_isatty_r>:
 8001378:	b538      	push	{r3, r4, r5, lr}
 800137a:	2300      	movs	r3, #0
 800137c:	4d05      	ldr	r5, [pc, #20]	; (8001394 <_isatty_r+0x1c>)
 800137e:	4604      	mov	r4, r0
 8001380:	4608      	mov	r0, r1
 8001382:	602b      	str	r3, [r5, #0]
 8001384:	f7fe ff93 	bl	80002ae <_isatty>
 8001388:	1c43      	adds	r3, r0, #1
 800138a:	d102      	bne.n	8001392 <_isatty_r+0x1a>
 800138c:	682b      	ldr	r3, [r5, #0]
 800138e:	b103      	cbz	r3, 8001392 <_isatty_r+0x1a>
 8001390:	6023      	str	r3, [r4, #0]
 8001392:	bd38      	pop	{r3, r4, r5, pc}
 8001394:	20000090 	.word	0x20000090

08001398 <_lseek_r>:
 8001398:	b538      	push	{r3, r4, r5, lr}
 800139a:	4604      	mov	r4, r0
 800139c:	4608      	mov	r0, r1
 800139e:	4611      	mov	r1, r2
 80013a0:	2200      	movs	r2, #0
 80013a2:	4d05      	ldr	r5, [pc, #20]	; (80013b8 <_lseek_r+0x20>)
 80013a4:	602a      	str	r2, [r5, #0]
 80013a6:	461a      	mov	r2, r3
 80013a8:	f7fe ff8b 	bl	80002c2 <_lseek>
 80013ac:	1c43      	adds	r3, r0, #1
 80013ae:	d102      	bne.n	80013b6 <_lseek_r+0x1e>
 80013b0:	682b      	ldr	r3, [r5, #0]
 80013b2:	b103      	cbz	r3, 80013b6 <_lseek_r+0x1e>
 80013b4:	6023      	str	r3, [r4, #0]
 80013b6:	bd38      	pop	{r3, r4, r5, pc}
 80013b8:	20000090 	.word	0x20000090

080013bc <memchr>:
 80013bc:	4603      	mov	r3, r0
 80013be:	b510      	push	{r4, lr}
 80013c0:	b2c9      	uxtb	r1, r1
 80013c2:	4402      	add	r2, r0
 80013c4:	4293      	cmp	r3, r2
 80013c6:	4618      	mov	r0, r3
 80013c8:	d101      	bne.n	80013ce <memchr+0x12>
 80013ca:	2000      	movs	r0, #0
 80013cc:	e003      	b.n	80013d6 <memchr+0x1a>
 80013ce:	7804      	ldrb	r4, [r0, #0]
 80013d0:	3301      	adds	r3, #1
 80013d2:	428c      	cmp	r4, r1
 80013d4:	d1f6      	bne.n	80013c4 <memchr+0x8>
 80013d6:	bd10      	pop	{r4, pc}

080013d8 <__malloc_lock>:
 80013d8:	4801      	ldr	r0, [pc, #4]	; (80013e0 <__malloc_lock+0x8>)
 80013da:	f7ff bb13 	b.w	8000a04 <__retarget_lock_acquire_recursive>
 80013de:	bf00      	nop
 80013e0:	20000084 	.word	0x20000084

080013e4 <__malloc_unlock>:
 80013e4:	4801      	ldr	r0, [pc, #4]	; (80013ec <__malloc_unlock+0x8>)
 80013e6:	f7ff bb0e 	b.w	8000a06 <__retarget_lock_release_recursive>
 80013ea:	bf00      	nop
 80013ec:	20000084 	.word	0x20000084

080013f0 <_read_r>:
 80013f0:	b538      	push	{r3, r4, r5, lr}
 80013f2:	4604      	mov	r4, r0
 80013f4:	4608      	mov	r0, r1
 80013f6:	4611      	mov	r1, r2
 80013f8:	2200      	movs	r2, #0
 80013fa:	4d05      	ldr	r5, [pc, #20]	; (8001410 <_read_r+0x20>)
 80013fc:	602a      	str	r2, [r5, #0]
 80013fe:	461a      	mov	r2, r3
 8001400:	f7fe ff02 	bl	8000208 <_read>
 8001404:	1c43      	adds	r3, r0, #1
 8001406:	d102      	bne.n	800140e <_read_r+0x1e>
 8001408:	682b      	ldr	r3, [r5, #0]
 800140a:	b103      	cbz	r3, 800140e <_read_r+0x1e>
 800140c:	6023      	str	r3, [r4, #0]
 800140e:	bd38      	pop	{r3, r4, r5, pc}
 8001410:	20000090 	.word	0x20000090

08001414 <_init>:
 8001414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001416:	bf00      	nop
 8001418:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800141a:	bc08      	pop	{r3}
 800141c:	469e      	mov	lr, r3
 800141e:	4770      	bx	lr

08001420 <_fini>:
 8001420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001422:	bf00      	nop
 8001424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001426:	bc08      	pop	{r3}
 8001428:	469e      	mov	lr, r3
 800142a:	4770      	bx	lr
