
hello_world.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c98  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000070  08000dc8  08000dc8  00010dc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e38  08000e38  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000e38  08000e38  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e38  08000e38  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e38  08000e38  00010e38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e3c  08000e3c  00010e3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000e40  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08000ea4  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08000ea4  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000936  00000000  00000000  0002008d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002c5  00000000  00000000  000209c3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00020c88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e0  00000000  00000000  00020da0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002be0  00000000  00000000  00020e80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001310  00000000  00000000  00023a60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000931e  00000000  00000000  00024d70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002e08e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a18  00000000  00000000  0002e0e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000064 	.word	0x20000064
 800014c:	00000000 	.word	0x00000000
 8000150:	08000db0 	.word	0x08000db0

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000068 	.word	0x20000068
 800016c:	08000db0 	.word	0x08000db0

08000170 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0

	printf("hello world\n");
 8000174:	4801      	ldr	r0, [pc, #4]	; (800017c <main+0xc>)
 8000176:	f000 f993 	bl	80004a0 <puts>
    /* Loop forever */
	for(;;);
 800017a:	e7fe      	b.n	800017a <main+0xa>
 800017c:	08000dc8 	.word	0x08000dc8

08000180 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000180:	b480      	push	{r7}
 8000182:	b083      	sub	sp, #12
 8000184:	af00      	add	r7, sp, #0
 8000186:	4603      	mov	r3, r0
 8000188:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800018a:	4b0e      	ldr	r3, [pc, #56]	; (80001c4 <ITM_SendChar+0x44>)
 800018c:	681b      	ldr	r3, [r3, #0]
 800018e:	4a0d      	ldr	r2, [pc, #52]	; (80001c4 <ITM_SendChar+0x44>)
 8000190:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000194:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000196:	4b0c      	ldr	r3, [pc, #48]	; (80001c8 <ITM_SendChar+0x48>)
 8000198:	681b      	ldr	r3, [r3, #0]
 800019a:	4a0b      	ldr	r2, [pc, #44]	; (80001c8 <ITM_SendChar+0x48>)
 800019c:	f043 0301 	orr.w	r3, r3, #1
 80001a0:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80001a2:	bf00      	nop
 80001a4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80001a8:	681b      	ldr	r3, [r3, #0]
 80001aa:	f003 0301 	and.w	r3, r3, #1
 80001ae:	2b00      	cmp	r3, #0
 80001b0:	d0f8      	beq.n	80001a4 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80001b2:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80001b6:	79fb      	ldrb	r3, [r7, #7]
 80001b8:	6013      	str	r3, [r2, #0]
}
 80001ba:	bf00      	nop
 80001bc:	370c      	adds	r7, #12
 80001be:	46bd      	mov	sp, r7
 80001c0:	bc80      	pop	{r7}
 80001c2:	4770      	bx	lr
 80001c4:	e000edfc 	.word	0xe000edfc
 80001c8:	e0000e00 	.word	0xe0000e00

080001cc <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80001cc:	b580      	push	{r7, lr}
 80001ce:	b086      	sub	sp, #24
 80001d0:	af00      	add	r7, sp, #0
 80001d2:	60f8      	str	r0, [r7, #12]
 80001d4:	60b9      	str	r1, [r7, #8]
 80001d6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001d8:	2300      	movs	r3, #0
 80001da:	617b      	str	r3, [r7, #20]
 80001dc:	e00a      	b.n	80001f4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80001de:	f3af 8000 	nop.w
 80001e2:	4601      	mov	r1, r0
 80001e4:	68bb      	ldr	r3, [r7, #8]
 80001e6:	1c5a      	adds	r2, r3, #1
 80001e8:	60ba      	str	r2, [r7, #8]
 80001ea:	b2ca      	uxtb	r2, r1
 80001ec:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001ee:	697b      	ldr	r3, [r7, #20]
 80001f0:	3301      	adds	r3, #1
 80001f2:	617b      	str	r3, [r7, #20]
 80001f4:	697a      	ldr	r2, [r7, #20]
 80001f6:	687b      	ldr	r3, [r7, #4]
 80001f8:	429a      	cmp	r2, r3
 80001fa:	dbf0      	blt.n	80001de <_read+0x12>
  }

  return len;
 80001fc:	687b      	ldr	r3, [r7, #4]
}
 80001fe:	4618      	mov	r0, r3
 8000200:	3718      	adds	r7, #24
 8000202:	46bd      	mov	sp, r7
 8000204:	bd80      	pop	{r7, pc}

08000206 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000206:	b580      	push	{r7, lr}
 8000208:	b086      	sub	sp, #24
 800020a:	af00      	add	r7, sp, #0
 800020c:	60f8      	str	r0, [r7, #12]
 800020e:	60b9      	str	r1, [r7, #8]
 8000210:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000212:	2300      	movs	r3, #0
 8000214:	617b      	str	r3, [r7, #20]
 8000216:	e009      	b.n	800022c <_write+0x26>
  {
    //__io_putchar(*ptr++);
	/*Write data to ITM Fifo*/
    ITM_SendChar(*ptr++);
 8000218:	68bb      	ldr	r3, [r7, #8]
 800021a:	1c5a      	adds	r2, r3, #1
 800021c:	60ba      	str	r2, [r7, #8]
 800021e:	781b      	ldrb	r3, [r3, #0]
 8000220:	4618      	mov	r0, r3
 8000222:	f7ff ffad 	bl	8000180 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000226:	697b      	ldr	r3, [r7, #20]
 8000228:	3301      	adds	r3, #1
 800022a:	617b      	str	r3, [r7, #20]
 800022c:	697a      	ldr	r2, [r7, #20]
 800022e:	687b      	ldr	r3, [r7, #4]
 8000230:	429a      	cmp	r2, r3
 8000232:	dbf1      	blt.n	8000218 <_write+0x12>
  }
  return len;
 8000234:	687b      	ldr	r3, [r7, #4]
}
 8000236:	4618      	mov	r0, r3
 8000238:	3718      	adds	r7, #24
 800023a:	46bd      	mov	sp, r7
 800023c:	bd80      	pop	{r7, pc}

0800023e <_close>:

int _close(int file)
{
 800023e:	b480      	push	{r7}
 8000240:	b083      	sub	sp, #12
 8000242:	af00      	add	r7, sp, #0
 8000244:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000246:	f04f 33ff 	mov.w	r3, #4294967295
}
 800024a:	4618      	mov	r0, r3
 800024c:	370c      	adds	r7, #12
 800024e:	46bd      	mov	sp, r7
 8000250:	bc80      	pop	{r7}
 8000252:	4770      	bx	lr

08000254 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000254:	b480      	push	{r7}
 8000256:	b083      	sub	sp, #12
 8000258:	af00      	add	r7, sp, #0
 800025a:	6078      	str	r0, [r7, #4]
 800025c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800025e:	683b      	ldr	r3, [r7, #0]
 8000260:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000264:	605a      	str	r2, [r3, #4]
  return 0;
 8000266:	2300      	movs	r3, #0
}
 8000268:	4618      	mov	r0, r3
 800026a:	370c      	adds	r7, #12
 800026c:	46bd      	mov	sp, r7
 800026e:	bc80      	pop	{r7}
 8000270:	4770      	bx	lr

08000272 <_isatty>:

int _isatty(int file)
{
 8000272:	b480      	push	{r7}
 8000274:	b083      	sub	sp, #12
 8000276:	af00      	add	r7, sp, #0
 8000278:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800027a:	2301      	movs	r3, #1
}
 800027c:	4618      	mov	r0, r3
 800027e:	370c      	adds	r7, #12
 8000280:	46bd      	mov	sp, r7
 8000282:	bc80      	pop	{r7}
 8000284:	4770      	bx	lr

08000286 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000286:	b480      	push	{r7}
 8000288:	b085      	sub	sp, #20
 800028a:	af00      	add	r7, sp, #0
 800028c:	60f8      	str	r0, [r7, #12]
 800028e:	60b9      	str	r1, [r7, #8]
 8000290:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000292:	2300      	movs	r3, #0
}
 8000294:	4618      	mov	r0, r3
 8000296:	3714      	adds	r7, #20
 8000298:	46bd      	mov	sp, r7
 800029a:	bc80      	pop	{r7}
 800029c:	4770      	bx	lr
	...

080002a0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b086      	sub	sp, #24
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002a8:	4a14      	ldr	r2, [pc, #80]	; (80002fc <_sbrk+0x5c>)
 80002aa:	4b15      	ldr	r3, [pc, #84]	; (8000300 <_sbrk+0x60>)
 80002ac:	1ad3      	subs	r3, r2, r3
 80002ae:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002b0:	697b      	ldr	r3, [r7, #20]
 80002b2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80002b4:	4b13      	ldr	r3, [pc, #76]	; (8000304 <_sbrk+0x64>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	d102      	bne.n	80002c2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80002bc:	4b11      	ldr	r3, [pc, #68]	; (8000304 <_sbrk+0x64>)
 80002be:	4a12      	ldr	r2, [pc, #72]	; (8000308 <_sbrk+0x68>)
 80002c0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80002c2:	4b10      	ldr	r3, [pc, #64]	; (8000304 <_sbrk+0x64>)
 80002c4:	681a      	ldr	r2, [r3, #0]
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4413      	add	r3, r2
 80002ca:	693a      	ldr	r2, [r7, #16]
 80002cc:	429a      	cmp	r2, r3
 80002ce:	d207      	bcs.n	80002e0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80002d0:	f000 f846 	bl	8000360 <__errno>
 80002d4:	4603      	mov	r3, r0
 80002d6:	220c      	movs	r2, #12
 80002d8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80002da:	f04f 33ff 	mov.w	r3, #4294967295
 80002de:	e009      	b.n	80002f4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80002e0:	4b08      	ldr	r3, [pc, #32]	; (8000304 <_sbrk+0x64>)
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80002e6:	4b07      	ldr	r3, [pc, #28]	; (8000304 <_sbrk+0x64>)
 80002e8:	681a      	ldr	r2, [r3, #0]
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	4413      	add	r3, r2
 80002ee:	4a05      	ldr	r2, [pc, #20]	; (8000304 <_sbrk+0x64>)
 80002f0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80002f2:	68fb      	ldr	r3, [r7, #12]
}
 80002f4:	4618      	mov	r0, r3
 80002f6:	3718      	adds	r7, #24
 80002f8:	46bd      	mov	sp, r7
 80002fa:	bd80      	pop	{r7, pc}
 80002fc:	20005000 	.word	0x20005000
 8000300:	00000400 	.word	0x00000400
 8000304:	20000080 	.word	0x20000080
 8000308:	20000098 	.word	0x20000098

0800030c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800030c:	480d      	ldr	r0, [pc, #52]	; (8000344 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800030e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000310:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000314:	480c      	ldr	r0, [pc, #48]	; (8000348 <LoopForever+0x6>)
  ldr r1, =_edata
 8000316:	490d      	ldr	r1, [pc, #52]	; (800034c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000318:	4a0d      	ldr	r2, [pc, #52]	; (8000350 <LoopForever+0xe>)
  movs r3, #0
 800031a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800031c:	e002      	b.n	8000324 <LoopCopyDataInit>

0800031e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800031e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000320:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000322:	3304      	adds	r3, #4

08000324 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000324:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000326:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000328:	d3f9      	bcc.n	800031e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800032a:	4a0a      	ldr	r2, [pc, #40]	; (8000354 <LoopForever+0x12>)
  ldr r4, =_ebss
 800032c:	4c0a      	ldr	r4, [pc, #40]	; (8000358 <LoopForever+0x16>)
  movs r3, #0
 800032e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000330:	e001      	b.n	8000336 <LoopFillZerobss>

08000332 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000332:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000334:	3204      	adds	r2, #4

08000336 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000336:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000338:	d3fb      	bcc.n	8000332 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800033a:	f000 f817 	bl	800036c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800033e:	f7ff ff17 	bl	8000170 <main>

08000342 <LoopForever>:

LoopForever:
  b LoopForever
 8000342:	e7fe      	b.n	8000342 <LoopForever>
  ldr   r0, =_estack
 8000344:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000348:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800034c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000350:	08000e40 	.word	0x08000e40
  ldr r2, =_sbss
 8000354:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000358:	20000094 	.word	0x20000094

0800035c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800035c:	e7fe      	b.n	800035c <ADC1_2_IRQHandler>
	...

08000360 <__errno>:
 8000360:	4b01      	ldr	r3, [pc, #4]	; (8000368 <__errno+0x8>)
 8000362:	6818      	ldr	r0, [r3, #0]
 8000364:	4770      	bx	lr
 8000366:	bf00      	nop
 8000368:	20000000 	.word	0x20000000

0800036c <__libc_init_array>:
 800036c:	b570      	push	{r4, r5, r6, lr}
 800036e:	2600      	movs	r6, #0
 8000370:	4d0c      	ldr	r5, [pc, #48]	; (80003a4 <__libc_init_array+0x38>)
 8000372:	4c0d      	ldr	r4, [pc, #52]	; (80003a8 <__libc_init_array+0x3c>)
 8000374:	1b64      	subs	r4, r4, r5
 8000376:	10a4      	asrs	r4, r4, #2
 8000378:	42a6      	cmp	r6, r4
 800037a:	d109      	bne.n	8000390 <__libc_init_array+0x24>
 800037c:	f000 fd18 	bl	8000db0 <_init>
 8000380:	2600      	movs	r6, #0
 8000382:	4d0a      	ldr	r5, [pc, #40]	; (80003ac <__libc_init_array+0x40>)
 8000384:	4c0a      	ldr	r4, [pc, #40]	; (80003b0 <__libc_init_array+0x44>)
 8000386:	1b64      	subs	r4, r4, r5
 8000388:	10a4      	asrs	r4, r4, #2
 800038a:	42a6      	cmp	r6, r4
 800038c:	d105      	bne.n	800039a <__libc_init_array+0x2e>
 800038e:	bd70      	pop	{r4, r5, r6, pc}
 8000390:	f855 3b04 	ldr.w	r3, [r5], #4
 8000394:	4798      	blx	r3
 8000396:	3601      	adds	r6, #1
 8000398:	e7ee      	b.n	8000378 <__libc_init_array+0xc>
 800039a:	f855 3b04 	ldr.w	r3, [r5], #4
 800039e:	4798      	blx	r3
 80003a0:	3601      	adds	r6, #1
 80003a2:	e7f2      	b.n	800038a <__libc_init_array+0x1e>
 80003a4:	08000e38 	.word	0x08000e38
 80003a8:	08000e38 	.word	0x08000e38
 80003ac:	08000e38 	.word	0x08000e38
 80003b0:	08000e3c 	.word	0x08000e3c

080003b4 <memset>:
 80003b4:	4603      	mov	r3, r0
 80003b6:	4402      	add	r2, r0
 80003b8:	4293      	cmp	r3, r2
 80003ba:	d100      	bne.n	80003be <memset+0xa>
 80003bc:	4770      	bx	lr
 80003be:	f803 1b01 	strb.w	r1, [r3], #1
 80003c2:	e7f9      	b.n	80003b8 <memset+0x4>

080003c4 <_puts_r>:
 80003c4:	b570      	push	{r4, r5, r6, lr}
 80003c6:	460e      	mov	r6, r1
 80003c8:	4605      	mov	r5, r0
 80003ca:	b118      	cbz	r0, 80003d4 <_puts_r+0x10>
 80003cc:	6983      	ldr	r3, [r0, #24]
 80003ce:	b90b      	cbnz	r3, 80003d4 <_puts_r+0x10>
 80003d0:	f000 fa44 	bl	800085c <__sinit>
 80003d4:	69ab      	ldr	r3, [r5, #24]
 80003d6:	68ac      	ldr	r4, [r5, #8]
 80003d8:	b913      	cbnz	r3, 80003e0 <_puts_r+0x1c>
 80003da:	4628      	mov	r0, r5
 80003dc:	f000 fa3e 	bl	800085c <__sinit>
 80003e0:	4b2c      	ldr	r3, [pc, #176]	; (8000494 <_puts_r+0xd0>)
 80003e2:	429c      	cmp	r4, r3
 80003e4:	d120      	bne.n	8000428 <_puts_r+0x64>
 80003e6:	686c      	ldr	r4, [r5, #4]
 80003e8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80003ea:	07db      	lsls	r3, r3, #31
 80003ec:	d405      	bmi.n	80003fa <_puts_r+0x36>
 80003ee:	89a3      	ldrh	r3, [r4, #12]
 80003f0:	0598      	lsls	r0, r3, #22
 80003f2:	d402      	bmi.n	80003fa <_puts_r+0x36>
 80003f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80003f6:	f000 facf 	bl	8000998 <__retarget_lock_acquire_recursive>
 80003fa:	89a3      	ldrh	r3, [r4, #12]
 80003fc:	0719      	lsls	r1, r3, #28
 80003fe:	d51d      	bpl.n	800043c <_puts_r+0x78>
 8000400:	6923      	ldr	r3, [r4, #16]
 8000402:	b1db      	cbz	r3, 800043c <_puts_r+0x78>
 8000404:	3e01      	subs	r6, #1
 8000406:	68a3      	ldr	r3, [r4, #8]
 8000408:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800040c:	3b01      	subs	r3, #1
 800040e:	60a3      	str	r3, [r4, #8]
 8000410:	bb39      	cbnz	r1, 8000462 <_puts_r+0x9e>
 8000412:	2b00      	cmp	r3, #0
 8000414:	da38      	bge.n	8000488 <_puts_r+0xc4>
 8000416:	4622      	mov	r2, r4
 8000418:	210a      	movs	r1, #10
 800041a:	4628      	mov	r0, r5
 800041c:	f000 f848 	bl	80004b0 <__swbuf_r>
 8000420:	3001      	adds	r0, #1
 8000422:	d011      	beq.n	8000448 <_puts_r+0x84>
 8000424:	250a      	movs	r5, #10
 8000426:	e011      	b.n	800044c <_puts_r+0x88>
 8000428:	4b1b      	ldr	r3, [pc, #108]	; (8000498 <_puts_r+0xd4>)
 800042a:	429c      	cmp	r4, r3
 800042c:	d101      	bne.n	8000432 <_puts_r+0x6e>
 800042e:	68ac      	ldr	r4, [r5, #8]
 8000430:	e7da      	b.n	80003e8 <_puts_r+0x24>
 8000432:	4b1a      	ldr	r3, [pc, #104]	; (800049c <_puts_r+0xd8>)
 8000434:	429c      	cmp	r4, r3
 8000436:	bf08      	it	eq
 8000438:	68ec      	ldreq	r4, [r5, #12]
 800043a:	e7d5      	b.n	80003e8 <_puts_r+0x24>
 800043c:	4621      	mov	r1, r4
 800043e:	4628      	mov	r0, r5
 8000440:	f000 f888 	bl	8000554 <__swsetup_r>
 8000444:	2800      	cmp	r0, #0
 8000446:	d0dd      	beq.n	8000404 <_puts_r+0x40>
 8000448:	f04f 35ff 	mov.w	r5, #4294967295
 800044c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800044e:	07da      	lsls	r2, r3, #31
 8000450:	d405      	bmi.n	800045e <_puts_r+0x9a>
 8000452:	89a3      	ldrh	r3, [r4, #12]
 8000454:	059b      	lsls	r3, r3, #22
 8000456:	d402      	bmi.n	800045e <_puts_r+0x9a>
 8000458:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800045a:	f000 fa9e 	bl	800099a <__retarget_lock_release_recursive>
 800045e:	4628      	mov	r0, r5
 8000460:	bd70      	pop	{r4, r5, r6, pc}
 8000462:	2b00      	cmp	r3, #0
 8000464:	da04      	bge.n	8000470 <_puts_r+0xac>
 8000466:	69a2      	ldr	r2, [r4, #24]
 8000468:	429a      	cmp	r2, r3
 800046a:	dc06      	bgt.n	800047a <_puts_r+0xb6>
 800046c:	290a      	cmp	r1, #10
 800046e:	d004      	beq.n	800047a <_puts_r+0xb6>
 8000470:	6823      	ldr	r3, [r4, #0]
 8000472:	1c5a      	adds	r2, r3, #1
 8000474:	6022      	str	r2, [r4, #0]
 8000476:	7019      	strb	r1, [r3, #0]
 8000478:	e7c5      	b.n	8000406 <_puts_r+0x42>
 800047a:	4622      	mov	r2, r4
 800047c:	4628      	mov	r0, r5
 800047e:	f000 f817 	bl	80004b0 <__swbuf_r>
 8000482:	3001      	adds	r0, #1
 8000484:	d1bf      	bne.n	8000406 <_puts_r+0x42>
 8000486:	e7df      	b.n	8000448 <_puts_r+0x84>
 8000488:	250a      	movs	r5, #10
 800048a:	6823      	ldr	r3, [r4, #0]
 800048c:	1c5a      	adds	r2, r3, #1
 800048e:	6022      	str	r2, [r4, #0]
 8000490:	701d      	strb	r5, [r3, #0]
 8000492:	e7db      	b.n	800044c <_puts_r+0x88>
 8000494:	08000df8 	.word	0x08000df8
 8000498:	08000e18 	.word	0x08000e18
 800049c:	08000dd8 	.word	0x08000dd8

080004a0 <puts>:
 80004a0:	4b02      	ldr	r3, [pc, #8]	; (80004ac <puts+0xc>)
 80004a2:	4601      	mov	r1, r0
 80004a4:	6818      	ldr	r0, [r3, #0]
 80004a6:	f7ff bf8d 	b.w	80003c4 <_puts_r>
 80004aa:	bf00      	nop
 80004ac:	20000000 	.word	0x20000000

080004b0 <__swbuf_r>:
 80004b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004b2:	460e      	mov	r6, r1
 80004b4:	4614      	mov	r4, r2
 80004b6:	4605      	mov	r5, r0
 80004b8:	b118      	cbz	r0, 80004c2 <__swbuf_r+0x12>
 80004ba:	6983      	ldr	r3, [r0, #24]
 80004bc:	b90b      	cbnz	r3, 80004c2 <__swbuf_r+0x12>
 80004be:	f000 f9cd 	bl	800085c <__sinit>
 80004c2:	4b21      	ldr	r3, [pc, #132]	; (8000548 <__swbuf_r+0x98>)
 80004c4:	429c      	cmp	r4, r3
 80004c6:	d12b      	bne.n	8000520 <__swbuf_r+0x70>
 80004c8:	686c      	ldr	r4, [r5, #4]
 80004ca:	69a3      	ldr	r3, [r4, #24]
 80004cc:	60a3      	str	r3, [r4, #8]
 80004ce:	89a3      	ldrh	r3, [r4, #12]
 80004d0:	071a      	lsls	r2, r3, #28
 80004d2:	d52f      	bpl.n	8000534 <__swbuf_r+0x84>
 80004d4:	6923      	ldr	r3, [r4, #16]
 80004d6:	b36b      	cbz	r3, 8000534 <__swbuf_r+0x84>
 80004d8:	6923      	ldr	r3, [r4, #16]
 80004da:	6820      	ldr	r0, [r4, #0]
 80004dc:	b2f6      	uxtb	r6, r6
 80004de:	1ac0      	subs	r0, r0, r3
 80004e0:	6963      	ldr	r3, [r4, #20]
 80004e2:	4637      	mov	r7, r6
 80004e4:	4283      	cmp	r3, r0
 80004e6:	dc04      	bgt.n	80004f2 <__swbuf_r+0x42>
 80004e8:	4621      	mov	r1, r4
 80004ea:	4628      	mov	r0, r5
 80004ec:	f000 f922 	bl	8000734 <_fflush_r>
 80004f0:	bb30      	cbnz	r0, 8000540 <__swbuf_r+0x90>
 80004f2:	68a3      	ldr	r3, [r4, #8]
 80004f4:	3001      	adds	r0, #1
 80004f6:	3b01      	subs	r3, #1
 80004f8:	60a3      	str	r3, [r4, #8]
 80004fa:	6823      	ldr	r3, [r4, #0]
 80004fc:	1c5a      	adds	r2, r3, #1
 80004fe:	6022      	str	r2, [r4, #0]
 8000500:	701e      	strb	r6, [r3, #0]
 8000502:	6963      	ldr	r3, [r4, #20]
 8000504:	4283      	cmp	r3, r0
 8000506:	d004      	beq.n	8000512 <__swbuf_r+0x62>
 8000508:	89a3      	ldrh	r3, [r4, #12]
 800050a:	07db      	lsls	r3, r3, #31
 800050c:	d506      	bpl.n	800051c <__swbuf_r+0x6c>
 800050e:	2e0a      	cmp	r6, #10
 8000510:	d104      	bne.n	800051c <__swbuf_r+0x6c>
 8000512:	4621      	mov	r1, r4
 8000514:	4628      	mov	r0, r5
 8000516:	f000 f90d 	bl	8000734 <_fflush_r>
 800051a:	b988      	cbnz	r0, 8000540 <__swbuf_r+0x90>
 800051c:	4638      	mov	r0, r7
 800051e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000520:	4b0a      	ldr	r3, [pc, #40]	; (800054c <__swbuf_r+0x9c>)
 8000522:	429c      	cmp	r4, r3
 8000524:	d101      	bne.n	800052a <__swbuf_r+0x7a>
 8000526:	68ac      	ldr	r4, [r5, #8]
 8000528:	e7cf      	b.n	80004ca <__swbuf_r+0x1a>
 800052a:	4b09      	ldr	r3, [pc, #36]	; (8000550 <__swbuf_r+0xa0>)
 800052c:	429c      	cmp	r4, r3
 800052e:	bf08      	it	eq
 8000530:	68ec      	ldreq	r4, [r5, #12]
 8000532:	e7ca      	b.n	80004ca <__swbuf_r+0x1a>
 8000534:	4621      	mov	r1, r4
 8000536:	4628      	mov	r0, r5
 8000538:	f000 f80c 	bl	8000554 <__swsetup_r>
 800053c:	2800      	cmp	r0, #0
 800053e:	d0cb      	beq.n	80004d8 <__swbuf_r+0x28>
 8000540:	f04f 37ff 	mov.w	r7, #4294967295
 8000544:	e7ea      	b.n	800051c <__swbuf_r+0x6c>
 8000546:	bf00      	nop
 8000548:	08000df8 	.word	0x08000df8
 800054c:	08000e18 	.word	0x08000e18
 8000550:	08000dd8 	.word	0x08000dd8

08000554 <__swsetup_r>:
 8000554:	4b32      	ldr	r3, [pc, #200]	; (8000620 <__swsetup_r+0xcc>)
 8000556:	b570      	push	{r4, r5, r6, lr}
 8000558:	681d      	ldr	r5, [r3, #0]
 800055a:	4606      	mov	r6, r0
 800055c:	460c      	mov	r4, r1
 800055e:	b125      	cbz	r5, 800056a <__swsetup_r+0x16>
 8000560:	69ab      	ldr	r3, [r5, #24]
 8000562:	b913      	cbnz	r3, 800056a <__swsetup_r+0x16>
 8000564:	4628      	mov	r0, r5
 8000566:	f000 f979 	bl	800085c <__sinit>
 800056a:	4b2e      	ldr	r3, [pc, #184]	; (8000624 <__swsetup_r+0xd0>)
 800056c:	429c      	cmp	r4, r3
 800056e:	d10f      	bne.n	8000590 <__swsetup_r+0x3c>
 8000570:	686c      	ldr	r4, [r5, #4]
 8000572:	89a3      	ldrh	r3, [r4, #12]
 8000574:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000578:	0719      	lsls	r1, r3, #28
 800057a:	d42c      	bmi.n	80005d6 <__swsetup_r+0x82>
 800057c:	06dd      	lsls	r5, r3, #27
 800057e:	d411      	bmi.n	80005a4 <__swsetup_r+0x50>
 8000580:	2309      	movs	r3, #9
 8000582:	6033      	str	r3, [r6, #0]
 8000584:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000588:	f04f 30ff 	mov.w	r0, #4294967295
 800058c:	81a3      	strh	r3, [r4, #12]
 800058e:	e03e      	b.n	800060e <__swsetup_r+0xba>
 8000590:	4b25      	ldr	r3, [pc, #148]	; (8000628 <__swsetup_r+0xd4>)
 8000592:	429c      	cmp	r4, r3
 8000594:	d101      	bne.n	800059a <__swsetup_r+0x46>
 8000596:	68ac      	ldr	r4, [r5, #8]
 8000598:	e7eb      	b.n	8000572 <__swsetup_r+0x1e>
 800059a:	4b24      	ldr	r3, [pc, #144]	; (800062c <__swsetup_r+0xd8>)
 800059c:	429c      	cmp	r4, r3
 800059e:	bf08      	it	eq
 80005a0:	68ec      	ldreq	r4, [r5, #12]
 80005a2:	e7e6      	b.n	8000572 <__swsetup_r+0x1e>
 80005a4:	0758      	lsls	r0, r3, #29
 80005a6:	d512      	bpl.n	80005ce <__swsetup_r+0x7a>
 80005a8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80005aa:	b141      	cbz	r1, 80005be <__swsetup_r+0x6a>
 80005ac:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80005b0:	4299      	cmp	r1, r3
 80005b2:	d002      	beq.n	80005ba <__swsetup_r+0x66>
 80005b4:	4630      	mov	r0, r6
 80005b6:	f000 fa57 	bl	8000a68 <_free_r>
 80005ba:	2300      	movs	r3, #0
 80005bc:	6363      	str	r3, [r4, #52]	; 0x34
 80005be:	89a3      	ldrh	r3, [r4, #12]
 80005c0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80005c4:	81a3      	strh	r3, [r4, #12]
 80005c6:	2300      	movs	r3, #0
 80005c8:	6063      	str	r3, [r4, #4]
 80005ca:	6923      	ldr	r3, [r4, #16]
 80005cc:	6023      	str	r3, [r4, #0]
 80005ce:	89a3      	ldrh	r3, [r4, #12]
 80005d0:	f043 0308 	orr.w	r3, r3, #8
 80005d4:	81a3      	strh	r3, [r4, #12]
 80005d6:	6923      	ldr	r3, [r4, #16]
 80005d8:	b94b      	cbnz	r3, 80005ee <__swsetup_r+0x9a>
 80005da:	89a3      	ldrh	r3, [r4, #12]
 80005dc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80005e0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80005e4:	d003      	beq.n	80005ee <__swsetup_r+0x9a>
 80005e6:	4621      	mov	r1, r4
 80005e8:	4630      	mov	r0, r6
 80005ea:	f000 f9fd 	bl	80009e8 <__smakebuf_r>
 80005ee:	89a0      	ldrh	r0, [r4, #12]
 80005f0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80005f4:	f010 0301 	ands.w	r3, r0, #1
 80005f8:	d00a      	beq.n	8000610 <__swsetup_r+0xbc>
 80005fa:	2300      	movs	r3, #0
 80005fc:	60a3      	str	r3, [r4, #8]
 80005fe:	6963      	ldr	r3, [r4, #20]
 8000600:	425b      	negs	r3, r3
 8000602:	61a3      	str	r3, [r4, #24]
 8000604:	6923      	ldr	r3, [r4, #16]
 8000606:	b943      	cbnz	r3, 800061a <__swsetup_r+0xc6>
 8000608:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800060c:	d1ba      	bne.n	8000584 <__swsetup_r+0x30>
 800060e:	bd70      	pop	{r4, r5, r6, pc}
 8000610:	0781      	lsls	r1, r0, #30
 8000612:	bf58      	it	pl
 8000614:	6963      	ldrpl	r3, [r4, #20]
 8000616:	60a3      	str	r3, [r4, #8]
 8000618:	e7f4      	b.n	8000604 <__swsetup_r+0xb0>
 800061a:	2000      	movs	r0, #0
 800061c:	e7f7      	b.n	800060e <__swsetup_r+0xba>
 800061e:	bf00      	nop
 8000620:	20000000 	.word	0x20000000
 8000624:	08000df8 	.word	0x08000df8
 8000628:	08000e18 	.word	0x08000e18
 800062c:	08000dd8 	.word	0x08000dd8

08000630 <__sflush_r>:
 8000630:	898a      	ldrh	r2, [r1, #12]
 8000632:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000634:	4605      	mov	r5, r0
 8000636:	0710      	lsls	r0, r2, #28
 8000638:	460c      	mov	r4, r1
 800063a:	d457      	bmi.n	80006ec <__sflush_r+0xbc>
 800063c:	684b      	ldr	r3, [r1, #4]
 800063e:	2b00      	cmp	r3, #0
 8000640:	dc04      	bgt.n	800064c <__sflush_r+0x1c>
 8000642:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000644:	2b00      	cmp	r3, #0
 8000646:	dc01      	bgt.n	800064c <__sflush_r+0x1c>
 8000648:	2000      	movs	r0, #0
 800064a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800064c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800064e:	2e00      	cmp	r6, #0
 8000650:	d0fa      	beq.n	8000648 <__sflush_r+0x18>
 8000652:	2300      	movs	r3, #0
 8000654:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000658:	682f      	ldr	r7, [r5, #0]
 800065a:	602b      	str	r3, [r5, #0]
 800065c:	d032      	beq.n	80006c4 <__sflush_r+0x94>
 800065e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000660:	89a3      	ldrh	r3, [r4, #12]
 8000662:	075a      	lsls	r2, r3, #29
 8000664:	d505      	bpl.n	8000672 <__sflush_r+0x42>
 8000666:	6863      	ldr	r3, [r4, #4]
 8000668:	1ac0      	subs	r0, r0, r3
 800066a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800066c:	b10b      	cbz	r3, 8000672 <__sflush_r+0x42>
 800066e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000670:	1ac0      	subs	r0, r0, r3
 8000672:	2300      	movs	r3, #0
 8000674:	4602      	mov	r2, r0
 8000676:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000678:	4628      	mov	r0, r5
 800067a:	6a21      	ldr	r1, [r4, #32]
 800067c:	47b0      	blx	r6
 800067e:	1c43      	adds	r3, r0, #1
 8000680:	89a3      	ldrh	r3, [r4, #12]
 8000682:	d106      	bne.n	8000692 <__sflush_r+0x62>
 8000684:	6829      	ldr	r1, [r5, #0]
 8000686:	291d      	cmp	r1, #29
 8000688:	d82c      	bhi.n	80006e4 <__sflush_r+0xb4>
 800068a:	4a29      	ldr	r2, [pc, #164]	; (8000730 <__sflush_r+0x100>)
 800068c:	40ca      	lsrs	r2, r1
 800068e:	07d6      	lsls	r6, r2, #31
 8000690:	d528      	bpl.n	80006e4 <__sflush_r+0xb4>
 8000692:	2200      	movs	r2, #0
 8000694:	6062      	str	r2, [r4, #4]
 8000696:	6922      	ldr	r2, [r4, #16]
 8000698:	04d9      	lsls	r1, r3, #19
 800069a:	6022      	str	r2, [r4, #0]
 800069c:	d504      	bpl.n	80006a8 <__sflush_r+0x78>
 800069e:	1c42      	adds	r2, r0, #1
 80006a0:	d101      	bne.n	80006a6 <__sflush_r+0x76>
 80006a2:	682b      	ldr	r3, [r5, #0]
 80006a4:	b903      	cbnz	r3, 80006a8 <__sflush_r+0x78>
 80006a6:	6560      	str	r0, [r4, #84]	; 0x54
 80006a8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006aa:	602f      	str	r7, [r5, #0]
 80006ac:	2900      	cmp	r1, #0
 80006ae:	d0cb      	beq.n	8000648 <__sflush_r+0x18>
 80006b0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006b4:	4299      	cmp	r1, r3
 80006b6:	d002      	beq.n	80006be <__sflush_r+0x8e>
 80006b8:	4628      	mov	r0, r5
 80006ba:	f000 f9d5 	bl	8000a68 <_free_r>
 80006be:	2000      	movs	r0, #0
 80006c0:	6360      	str	r0, [r4, #52]	; 0x34
 80006c2:	e7c2      	b.n	800064a <__sflush_r+0x1a>
 80006c4:	6a21      	ldr	r1, [r4, #32]
 80006c6:	2301      	movs	r3, #1
 80006c8:	4628      	mov	r0, r5
 80006ca:	47b0      	blx	r6
 80006cc:	1c41      	adds	r1, r0, #1
 80006ce:	d1c7      	bne.n	8000660 <__sflush_r+0x30>
 80006d0:	682b      	ldr	r3, [r5, #0]
 80006d2:	2b00      	cmp	r3, #0
 80006d4:	d0c4      	beq.n	8000660 <__sflush_r+0x30>
 80006d6:	2b1d      	cmp	r3, #29
 80006d8:	d001      	beq.n	80006de <__sflush_r+0xae>
 80006da:	2b16      	cmp	r3, #22
 80006dc:	d101      	bne.n	80006e2 <__sflush_r+0xb2>
 80006de:	602f      	str	r7, [r5, #0]
 80006e0:	e7b2      	b.n	8000648 <__sflush_r+0x18>
 80006e2:	89a3      	ldrh	r3, [r4, #12]
 80006e4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80006e8:	81a3      	strh	r3, [r4, #12]
 80006ea:	e7ae      	b.n	800064a <__sflush_r+0x1a>
 80006ec:	690f      	ldr	r7, [r1, #16]
 80006ee:	2f00      	cmp	r7, #0
 80006f0:	d0aa      	beq.n	8000648 <__sflush_r+0x18>
 80006f2:	0793      	lsls	r3, r2, #30
 80006f4:	bf18      	it	ne
 80006f6:	2300      	movne	r3, #0
 80006f8:	680e      	ldr	r6, [r1, #0]
 80006fa:	bf08      	it	eq
 80006fc:	694b      	ldreq	r3, [r1, #20]
 80006fe:	1bf6      	subs	r6, r6, r7
 8000700:	600f      	str	r7, [r1, #0]
 8000702:	608b      	str	r3, [r1, #8]
 8000704:	2e00      	cmp	r6, #0
 8000706:	dd9f      	ble.n	8000648 <__sflush_r+0x18>
 8000708:	4633      	mov	r3, r6
 800070a:	463a      	mov	r2, r7
 800070c:	4628      	mov	r0, r5
 800070e:	6a21      	ldr	r1, [r4, #32]
 8000710:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000714:	47e0      	blx	ip
 8000716:	2800      	cmp	r0, #0
 8000718:	dc06      	bgt.n	8000728 <__sflush_r+0xf8>
 800071a:	89a3      	ldrh	r3, [r4, #12]
 800071c:	f04f 30ff 	mov.w	r0, #4294967295
 8000720:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000724:	81a3      	strh	r3, [r4, #12]
 8000726:	e790      	b.n	800064a <__sflush_r+0x1a>
 8000728:	4407      	add	r7, r0
 800072a:	1a36      	subs	r6, r6, r0
 800072c:	e7ea      	b.n	8000704 <__sflush_r+0xd4>
 800072e:	bf00      	nop
 8000730:	20400001 	.word	0x20400001

08000734 <_fflush_r>:
 8000734:	b538      	push	{r3, r4, r5, lr}
 8000736:	690b      	ldr	r3, [r1, #16]
 8000738:	4605      	mov	r5, r0
 800073a:	460c      	mov	r4, r1
 800073c:	b913      	cbnz	r3, 8000744 <_fflush_r+0x10>
 800073e:	2500      	movs	r5, #0
 8000740:	4628      	mov	r0, r5
 8000742:	bd38      	pop	{r3, r4, r5, pc}
 8000744:	b118      	cbz	r0, 800074e <_fflush_r+0x1a>
 8000746:	6983      	ldr	r3, [r0, #24]
 8000748:	b90b      	cbnz	r3, 800074e <_fflush_r+0x1a>
 800074a:	f000 f887 	bl	800085c <__sinit>
 800074e:	4b14      	ldr	r3, [pc, #80]	; (80007a0 <_fflush_r+0x6c>)
 8000750:	429c      	cmp	r4, r3
 8000752:	d11b      	bne.n	800078c <_fflush_r+0x58>
 8000754:	686c      	ldr	r4, [r5, #4]
 8000756:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800075a:	2b00      	cmp	r3, #0
 800075c:	d0ef      	beq.n	800073e <_fflush_r+0xa>
 800075e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000760:	07d0      	lsls	r0, r2, #31
 8000762:	d404      	bmi.n	800076e <_fflush_r+0x3a>
 8000764:	0599      	lsls	r1, r3, #22
 8000766:	d402      	bmi.n	800076e <_fflush_r+0x3a>
 8000768:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800076a:	f000 f915 	bl	8000998 <__retarget_lock_acquire_recursive>
 800076e:	4628      	mov	r0, r5
 8000770:	4621      	mov	r1, r4
 8000772:	f7ff ff5d 	bl	8000630 <__sflush_r>
 8000776:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000778:	4605      	mov	r5, r0
 800077a:	07da      	lsls	r2, r3, #31
 800077c:	d4e0      	bmi.n	8000740 <_fflush_r+0xc>
 800077e:	89a3      	ldrh	r3, [r4, #12]
 8000780:	059b      	lsls	r3, r3, #22
 8000782:	d4dd      	bmi.n	8000740 <_fflush_r+0xc>
 8000784:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000786:	f000 f908 	bl	800099a <__retarget_lock_release_recursive>
 800078a:	e7d9      	b.n	8000740 <_fflush_r+0xc>
 800078c:	4b05      	ldr	r3, [pc, #20]	; (80007a4 <_fflush_r+0x70>)
 800078e:	429c      	cmp	r4, r3
 8000790:	d101      	bne.n	8000796 <_fflush_r+0x62>
 8000792:	68ac      	ldr	r4, [r5, #8]
 8000794:	e7df      	b.n	8000756 <_fflush_r+0x22>
 8000796:	4b04      	ldr	r3, [pc, #16]	; (80007a8 <_fflush_r+0x74>)
 8000798:	429c      	cmp	r4, r3
 800079a:	bf08      	it	eq
 800079c:	68ec      	ldreq	r4, [r5, #12]
 800079e:	e7da      	b.n	8000756 <_fflush_r+0x22>
 80007a0:	08000df8 	.word	0x08000df8
 80007a4:	08000e18 	.word	0x08000e18
 80007a8:	08000dd8 	.word	0x08000dd8

080007ac <std>:
 80007ac:	2300      	movs	r3, #0
 80007ae:	b510      	push	{r4, lr}
 80007b0:	4604      	mov	r4, r0
 80007b2:	e9c0 3300 	strd	r3, r3, [r0]
 80007b6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80007ba:	6083      	str	r3, [r0, #8]
 80007bc:	8181      	strh	r1, [r0, #12]
 80007be:	6643      	str	r3, [r0, #100]	; 0x64
 80007c0:	81c2      	strh	r2, [r0, #14]
 80007c2:	6183      	str	r3, [r0, #24]
 80007c4:	4619      	mov	r1, r3
 80007c6:	2208      	movs	r2, #8
 80007c8:	305c      	adds	r0, #92	; 0x5c
 80007ca:	f7ff fdf3 	bl	80003b4 <memset>
 80007ce:	4b05      	ldr	r3, [pc, #20]	; (80007e4 <std+0x38>)
 80007d0:	6224      	str	r4, [r4, #32]
 80007d2:	6263      	str	r3, [r4, #36]	; 0x24
 80007d4:	4b04      	ldr	r3, [pc, #16]	; (80007e8 <std+0x3c>)
 80007d6:	62a3      	str	r3, [r4, #40]	; 0x28
 80007d8:	4b04      	ldr	r3, [pc, #16]	; (80007ec <std+0x40>)
 80007da:	62e3      	str	r3, [r4, #44]	; 0x2c
 80007dc:	4b04      	ldr	r3, [pc, #16]	; (80007f0 <std+0x44>)
 80007de:	6323      	str	r3, [r4, #48]	; 0x30
 80007e0:	bd10      	pop	{r4, pc}
 80007e2:	bf00      	nop
 80007e4:	08000c41 	.word	0x08000c41
 80007e8:	08000c63 	.word	0x08000c63
 80007ec:	08000c9b 	.word	0x08000c9b
 80007f0:	08000cbf 	.word	0x08000cbf

080007f4 <_cleanup_r>:
 80007f4:	4901      	ldr	r1, [pc, #4]	; (80007fc <_cleanup_r+0x8>)
 80007f6:	f000 b8af 	b.w	8000958 <_fwalk_reent>
 80007fa:	bf00      	nop
 80007fc:	08000735 	.word	0x08000735

08000800 <__sfmoreglue>:
 8000800:	2268      	movs	r2, #104	; 0x68
 8000802:	b570      	push	{r4, r5, r6, lr}
 8000804:	1e4d      	subs	r5, r1, #1
 8000806:	4355      	muls	r5, r2
 8000808:	460e      	mov	r6, r1
 800080a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800080e:	f000 f993 	bl	8000b38 <_malloc_r>
 8000812:	4604      	mov	r4, r0
 8000814:	b140      	cbz	r0, 8000828 <__sfmoreglue+0x28>
 8000816:	2100      	movs	r1, #0
 8000818:	e9c0 1600 	strd	r1, r6, [r0]
 800081c:	300c      	adds	r0, #12
 800081e:	60a0      	str	r0, [r4, #8]
 8000820:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000824:	f7ff fdc6 	bl	80003b4 <memset>
 8000828:	4620      	mov	r0, r4
 800082a:	bd70      	pop	{r4, r5, r6, pc}

0800082c <__sfp_lock_acquire>:
 800082c:	4801      	ldr	r0, [pc, #4]	; (8000834 <__sfp_lock_acquire+0x8>)
 800082e:	f000 b8b3 	b.w	8000998 <__retarget_lock_acquire_recursive>
 8000832:	bf00      	nop
 8000834:	20000085 	.word	0x20000085

08000838 <__sfp_lock_release>:
 8000838:	4801      	ldr	r0, [pc, #4]	; (8000840 <__sfp_lock_release+0x8>)
 800083a:	f000 b8ae 	b.w	800099a <__retarget_lock_release_recursive>
 800083e:	bf00      	nop
 8000840:	20000085 	.word	0x20000085

08000844 <__sinit_lock_acquire>:
 8000844:	4801      	ldr	r0, [pc, #4]	; (800084c <__sinit_lock_acquire+0x8>)
 8000846:	f000 b8a7 	b.w	8000998 <__retarget_lock_acquire_recursive>
 800084a:	bf00      	nop
 800084c:	20000086 	.word	0x20000086

08000850 <__sinit_lock_release>:
 8000850:	4801      	ldr	r0, [pc, #4]	; (8000858 <__sinit_lock_release+0x8>)
 8000852:	f000 b8a2 	b.w	800099a <__retarget_lock_release_recursive>
 8000856:	bf00      	nop
 8000858:	20000086 	.word	0x20000086

0800085c <__sinit>:
 800085c:	b510      	push	{r4, lr}
 800085e:	4604      	mov	r4, r0
 8000860:	f7ff fff0 	bl	8000844 <__sinit_lock_acquire>
 8000864:	69a3      	ldr	r3, [r4, #24]
 8000866:	b11b      	cbz	r3, 8000870 <__sinit+0x14>
 8000868:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800086c:	f7ff bff0 	b.w	8000850 <__sinit_lock_release>
 8000870:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000874:	6523      	str	r3, [r4, #80]	; 0x50
 8000876:	4b13      	ldr	r3, [pc, #76]	; (80008c4 <__sinit+0x68>)
 8000878:	4a13      	ldr	r2, [pc, #76]	; (80008c8 <__sinit+0x6c>)
 800087a:	681b      	ldr	r3, [r3, #0]
 800087c:	62a2      	str	r2, [r4, #40]	; 0x28
 800087e:	42a3      	cmp	r3, r4
 8000880:	bf08      	it	eq
 8000882:	2301      	moveq	r3, #1
 8000884:	4620      	mov	r0, r4
 8000886:	bf08      	it	eq
 8000888:	61a3      	streq	r3, [r4, #24]
 800088a:	f000 f81f 	bl	80008cc <__sfp>
 800088e:	6060      	str	r0, [r4, #4]
 8000890:	4620      	mov	r0, r4
 8000892:	f000 f81b 	bl	80008cc <__sfp>
 8000896:	60a0      	str	r0, [r4, #8]
 8000898:	4620      	mov	r0, r4
 800089a:	f000 f817 	bl	80008cc <__sfp>
 800089e:	2200      	movs	r2, #0
 80008a0:	2104      	movs	r1, #4
 80008a2:	60e0      	str	r0, [r4, #12]
 80008a4:	6860      	ldr	r0, [r4, #4]
 80008a6:	f7ff ff81 	bl	80007ac <std>
 80008aa:	2201      	movs	r2, #1
 80008ac:	2109      	movs	r1, #9
 80008ae:	68a0      	ldr	r0, [r4, #8]
 80008b0:	f7ff ff7c 	bl	80007ac <std>
 80008b4:	2202      	movs	r2, #2
 80008b6:	2112      	movs	r1, #18
 80008b8:	68e0      	ldr	r0, [r4, #12]
 80008ba:	f7ff ff77 	bl	80007ac <std>
 80008be:	2301      	movs	r3, #1
 80008c0:	61a3      	str	r3, [r4, #24]
 80008c2:	e7d1      	b.n	8000868 <__sinit+0xc>
 80008c4:	08000dd4 	.word	0x08000dd4
 80008c8:	080007f5 	.word	0x080007f5

080008cc <__sfp>:
 80008cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ce:	4607      	mov	r7, r0
 80008d0:	f7ff ffac 	bl	800082c <__sfp_lock_acquire>
 80008d4:	4b1e      	ldr	r3, [pc, #120]	; (8000950 <__sfp+0x84>)
 80008d6:	681e      	ldr	r6, [r3, #0]
 80008d8:	69b3      	ldr	r3, [r6, #24]
 80008da:	b913      	cbnz	r3, 80008e2 <__sfp+0x16>
 80008dc:	4630      	mov	r0, r6
 80008de:	f7ff ffbd 	bl	800085c <__sinit>
 80008e2:	3648      	adds	r6, #72	; 0x48
 80008e4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80008e8:	3b01      	subs	r3, #1
 80008ea:	d503      	bpl.n	80008f4 <__sfp+0x28>
 80008ec:	6833      	ldr	r3, [r6, #0]
 80008ee:	b30b      	cbz	r3, 8000934 <__sfp+0x68>
 80008f0:	6836      	ldr	r6, [r6, #0]
 80008f2:	e7f7      	b.n	80008e4 <__sfp+0x18>
 80008f4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80008f8:	b9d5      	cbnz	r5, 8000930 <__sfp+0x64>
 80008fa:	4b16      	ldr	r3, [pc, #88]	; (8000954 <__sfp+0x88>)
 80008fc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000900:	60e3      	str	r3, [r4, #12]
 8000902:	6665      	str	r5, [r4, #100]	; 0x64
 8000904:	f000 f847 	bl	8000996 <__retarget_lock_init_recursive>
 8000908:	f7ff ff96 	bl	8000838 <__sfp_lock_release>
 800090c:	2208      	movs	r2, #8
 800090e:	4629      	mov	r1, r5
 8000910:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000914:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000918:	6025      	str	r5, [r4, #0]
 800091a:	61a5      	str	r5, [r4, #24]
 800091c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000920:	f7ff fd48 	bl	80003b4 <memset>
 8000924:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000928:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800092c:	4620      	mov	r0, r4
 800092e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000930:	3468      	adds	r4, #104	; 0x68
 8000932:	e7d9      	b.n	80008e8 <__sfp+0x1c>
 8000934:	2104      	movs	r1, #4
 8000936:	4638      	mov	r0, r7
 8000938:	f7ff ff62 	bl	8000800 <__sfmoreglue>
 800093c:	4604      	mov	r4, r0
 800093e:	6030      	str	r0, [r6, #0]
 8000940:	2800      	cmp	r0, #0
 8000942:	d1d5      	bne.n	80008f0 <__sfp+0x24>
 8000944:	f7ff ff78 	bl	8000838 <__sfp_lock_release>
 8000948:	230c      	movs	r3, #12
 800094a:	603b      	str	r3, [r7, #0]
 800094c:	e7ee      	b.n	800092c <__sfp+0x60>
 800094e:	bf00      	nop
 8000950:	08000dd4 	.word	0x08000dd4
 8000954:	ffff0001 	.word	0xffff0001

08000958 <_fwalk_reent>:
 8000958:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800095c:	4606      	mov	r6, r0
 800095e:	4688      	mov	r8, r1
 8000960:	2700      	movs	r7, #0
 8000962:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000966:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800096a:	f1b9 0901 	subs.w	r9, r9, #1
 800096e:	d505      	bpl.n	800097c <_fwalk_reent+0x24>
 8000970:	6824      	ldr	r4, [r4, #0]
 8000972:	2c00      	cmp	r4, #0
 8000974:	d1f7      	bne.n	8000966 <_fwalk_reent+0xe>
 8000976:	4638      	mov	r0, r7
 8000978:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800097c:	89ab      	ldrh	r3, [r5, #12]
 800097e:	2b01      	cmp	r3, #1
 8000980:	d907      	bls.n	8000992 <_fwalk_reent+0x3a>
 8000982:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000986:	3301      	adds	r3, #1
 8000988:	d003      	beq.n	8000992 <_fwalk_reent+0x3a>
 800098a:	4629      	mov	r1, r5
 800098c:	4630      	mov	r0, r6
 800098e:	47c0      	blx	r8
 8000990:	4307      	orrs	r7, r0
 8000992:	3568      	adds	r5, #104	; 0x68
 8000994:	e7e9      	b.n	800096a <_fwalk_reent+0x12>

08000996 <__retarget_lock_init_recursive>:
 8000996:	4770      	bx	lr

08000998 <__retarget_lock_acquire_recursive>:
 8000998:	4770      	bx	lr

0800099a <__retarget_lock_release_recursive>:
 800099a:	4770      	bx	lr

0800099c <__swhatbuf_r>:
 800099c:	b570      	push	{r4, r5, r6, lr}
 800099e:	460e      	mov	r6, r1
 80009a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80009a4:	4614      	mov	r4, r2
 80009a6:	2900      	cmp	r1, #0
 80009a8:	461d      	mov	r5, r3
 80009aa:	b096      	sub	sp, #88	; 0x58
 80009ac:	da08      	bge.n	80009c0 <__swhatbuf_r+0x24>
 80009ae:	2200      	movs	r2, #0
 80009b0:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80009b4:	602a      	str	r2, [r5, #0]
 80009b6:	061a      	lsls	r2, r3, #24
 80009b8:	d410      	bmi.n	80009dc <__swhatbuf_r+0x40>
 80009ba:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80009be:	e00e      	b.n	80009de <__swhatbuf_r+0x42>
 80009c0:	466a      	mov	r2, sp
 80009c2:	f000 f9a3 	bl	8000d0c <_fstat_r>
 80009c6:	2800      	cmp	r0, #0
 80009c8:	dbf1      	blt.n	80009ae <__swhatbuf_r+0x12>
 80009ca:	9a01      	ldr	r2, [sp, #4]
 80009cc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80009d0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80009d4:	425a      	negs	r2, r3
 80009d6:	415a      	adcs	r2, r3
 80009d8:	602a      	str	r2, [r5, #0]
 80009da:	e7ee      	b.n	80009ba <__swhatbuf_r+0x1e>
 80009dc:	2340      	movs	r3, #64	; 0x40
 80009de:	2000      	movs	r0, #0
 80009e0:	6023      	str	r3, [r4, #0]
 80009e2:	b016      	add	sp, #88	; 0x58
 80009e4:	bd70      	pop	{r4, r5, r6, pc}
	...

080009e8 <__smakebuf_r>:
 80009e8:	898b      	ldrh	r3, [r1, #12]
 80009ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80009ec:	079d      	lsls	r5, r3, #30
 80009ee:	4606      	mov	r6, r0
 80009f0:	460c      	mov	r4, r1
 80009f2:	d507      	bpl.n	8000a04 <__smakebuf_r+0x1c>
 80009f4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80009f8:	6023      	str	r3, [r4, #0]
 80009fa:	6123      	str	r3, [r4, #16]
 80009fc:	2301      	movs	r3, #1
 80009fe:	6163      	str	r3, [r4, #20]
 8000a00:	b002      	add	sp, #8
 8000a02:	bd70      	pop	{r4, r5, r6, pc}
 8000a04:	466a      	mov	r2, sp
 8000a06:	ab01      	add	r3, sp, #4
 8000a08:	f7ff ffc8 	bl	800099c <__swhatbuf_r>
 8000a0c:	9900      	ldr	r1, [sp, #0]
 8000a0e:	4605      	mov	r5, r0
 8000a10:	4630      	mov	r0, r6
 8000a12:	f000 f891 	bl	8000b38 <_malloc_r>
 8000a16:	b948      	cbnz	r0, 8000a2c <__smakebuf_r+0x44>
 8000a18:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a1c:	059a      	lsls	r2, r3, #22
 8000a1e:	d4ef      	bmi.n	8000a00 <__smakebuf_r+0x18>
 8000a20:	f023 0303 	bic.w	r3, r3, #3
 8000a24:	f043 0302 	orr.w	r3, r3, #2
 8000a28:	81a3      	strh	r3, [r4, #12]
 8000a2a:	e7e3      	b.n	80009f4 <__smakebuf_r+0xc>
 8000a2c:	4b0d      	ldr	r3, [pc, #52]	; (8000a64 <__smakebuf_r+0x7c>)
 8000a2e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a30:	89a3      	ldrh	r3, [r4, #12]
 8000a32:	6020      	str	r0, [r4, #0]
 8000a34:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a38:	81a3      	strh	r3, [r4, #12]
 8000a3a:	9b00      	ldr	r3, [sp, #0]
 8000a3c:	6120      	str	r0, [r4, #16]
 8000a3e:	6163      	str	r3, [r4, #20]
 8000a40:	9b01      	ldr	r3, [sp, #4]
 8000a42:	b15b      	cbz	r3, 8000a5c <__smakebuf_r+0x74>
 8000a44:	4630      	mov	r0, r6
 8000a46:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a4a:	f000 f971 	bl	8000d30 <_isatty_r>
 8000a4e:	b128      	cbz	r0, 8000a5c <__smakebuf_r+0x74>
 8000a50:	89a3      	ldrh	r3, [r4, #12]
 8000a52:	f023 0303 	bic.w	r3, r3, #3
 8000a56:	f043 0301 	orr.w	r3, r3, #1
 8000a5a:	81a3      	strh	r3, [r4, #12]
 8000a5c:	89a0      	ldrh	r0, [r4, #12]
 8000a5e:	4305      	orrs	r5, r0
 8000a60:	81a5      	strh	r5, [r4, #12]
 8000a62:	e7cd      	b.n	8000a00 <__smakebuf_r+0x18>
 8000a64:	080007f5 	.word	0x080007f5

08000a68 <_free_r>:
 8000a68:	b538      	push	{r3, r4, r5, lr}
 8000a6a:	4605      	mov	r5, r0
 8000a6c:	2900      	cmp	r1, #0
 8000a6e:	d040      	beq.n	8000af2 <_free_r+0x8a>
 8000a70:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a74:	1f0c      	subs	r4, r1, #4
 8000a76:	2b00      	cmp	r3, #0
 8000a78:	bfb8      	it	lt
 8000a7a:	18e4      	addlt	r4, r4, r3
 8000a7c:	f000 f97a 	bl	8000d74 <__malloc_lock>
 8000a80:	4a1c      	ldr	r2, [pc, #112]	; (8000af4 <_free_r+0x8c>)
 8000a82:	6813      	ldr	r3, [r2, #0]
 8000a84:	b933      	cbnz	r3, 8000a94 <_free_r+0x2c>
 8000a86:	6063      	str	r3, [r4, #4]
 8000a88:	6014      	str	r4, [r2, #0]
 8000a8a:	4628      	mov	r0, r5
 8000a8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a90:	f000 b976 	b.w	8000d80 <__malloc_unlock>
 8000a94:	42a3      	cmp	r3, r4
 8000a96:	d908      	bls.n	8000aaa <_free_r+0x42>
 8000a98:	6820      	ldr	r0, [r4, #0]
 8000a9a:	1821      	adds	r1, r4, r0
 8000a9c:	428b      	cmp	r3, r1
 8000a9e:	bf01      	itttt	eq
 8000aa0:	6819      	ldreq	r1, [r3, #0]
 8000aa2:	685b      	ldreq	r3, [r3, #4]
 8000aa4:	1809      	addeq	r1, r1, r0
 8000aa6:	6021      	streq	r1, [r4, #0]
 8000aa8:	e7ed      	b.n	8000a86 <_free_r+0x1e>
 8000aaa:	461a      	mov	r2, r3
 8000aac:	685b      	ldr	r3, [r3, #4]
 8000aae:	b10b      	cbz	r3, 8000ab4 <_free_r+0x4c>
 8000ab0:	42a3      	cmp	r3, r4
 8000ab2:	d9fa      	bls.n	8000aaa <_free_r+0x42>
 8000ab4:	6811      	ldr	r1, [r2, #0]
 8000ab6:	1850      	adds	r0, r2, r1
 8000ab8:	42a0      	cmp	r0, r4
 8000aba:	d10b      	bne.n	8000ad4 <_free_r+0x6c>
 8000abc:	6820      	ldr	r0, [r4, #0]
 8000abe:	4401      	add	r1, r0
 8000ac0:	1850      	adds	r0, r2, r1
 8000ac2:	4283      	cmp	r3, r0
 8000ac4:	6011      	str	r1, [r2, #0]
 8000ac6:	d1e0      	bne.n	8000a8a <_free_r+0x22>
 8000ac8:	6818      	ldr	r0, [r3, #0]
 8000aca:	685b      	ldr	r3, [r3, #4]
 8000acc:	4401      	add	r1, r0
 8000ace:	6011      	str	r1, [r2, #0]
 8000ad0:	6053      	str	r3, [r2, #4]
 8000ad2:	e7da      	b.n	8000a8a <_free_r+0x22>
 8000ad4:	d902      	bls.n	8000adc <_free_r+0x74>
 8000ad6:	230c      	movs	r3, #12
 8000ad8:	602b      	str	r3, [r5, #0]
 8000ada:	e7d6      	b.n	8000a8a <_free_r+0x22>
 8000adc:	6820      	ldr	r0, [r4, #0]
 8000ade:	1821      	adds	r1, r4, r0
 8000ae0:	428b      	cmp	r3, r1
 8000ae2:	bf01      	itttt	eq
 8000ae4:	6819      	ldreq	r1, [r3, #0]
 8000ae6:	685b      	ldreq	r3, [r3, #4]
 8000ae8:	1809      	addeq	r1, r1, r0
 8000aea:	6021      	streq	r1, [r4, #0]
 8000aec:	6063      	str	r3, [r4, #4]
 8000aee:	6054      	str	r4, [r2, #4]
 8000af0:	e7cb      	b.n	8000a8a <_free_r+0x22>
 8000af2:	bd38      	pop	{r3, r4, r5, pc}
 8000af4:	20000088 	.word	0x20000088

08000af8 <sbrk_aligned>:
 8000af8:	b570      	push	{r4, r5, r6, lr}
 8000afa:	4e0e      	ldr	r6, [pc, #56]	; (8000b34 <sbrk_aligned+0x3c>)
 8000afc:	460c      	mov	r4, r1
 8000afe:	6831      	ldr	r1, [r6, #0]
 8000b00:	4605      	mov	r5, r0
 8000b02:	b911      	cbnz	r1, 8000b0a <sbrk_aligned+0x12>
 8000b04:	f000 f88c 	bl	8000c20 <_sbrk_r>
 8000b08:	6030      	str	r0, [r6, #0]
 8000b0a:	4621      	mov	r1, r4
 8000b0c:	4628      	mov	r0, r5
 8000b0e:	f000 f887 	bl	8000c20 <_sbrk_r>
 8000b12:	1c43      	adds	r3, r0, #1
 8000b14:	d00a      	beq.n	8000b2c <sbrk_aligned+0x34>
 8000b16:	1cc4      	adds	r4, r0, #3
 8000b18:	f024 0403 	bic.w	r4, r4, #3
 8000b1c:	42a0      	cmp	r0, r4
 8000b1e:	d007      	beq.n	8000b30 <sbrk_aligned+0x38>
 8000b20:	1a21      	subs	r1, r4, r0
 8000b22:	4628      	mov	r0, r5
 8000b24:	f000 f87c 	bl	8000c20 <_sbrk_r>
 8000b28:	3001      	adds	r0, #1
 8000b2a:	d101      	bne.n	8000b30 <sbrk_aligned+0x38>
 8000b2c:	f04f 34ff 	mov.w	r4, #4294967295
 8000b30:	4620      	mov	r0, r4
 8000b32:	bd70      	pop	{r4, r5, r6, pc}
 8000b34:	2000008c 	.word	0x2000008c

08000b38 <_malloc_r>:
 8000b38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b3c:	1ccd      	adds	r5, r1, #3
 8000b3e:	f025 0503 	bic.w	r5, r5, #3
 8000b42:	3508      	adds	r5, #8
 8000b44:	2d0c      	cmp	r5, #12
 8000b46:	bf38      	it	cc
 8000b48:	250c      	movcc	r5, #12
 8000b4a:	2d00      	cmp	r5, #0
 8000b4c:	4607      	mov	r7, r0
 8000b4e:	db01      	blt.n	8000b54 <_malloc_r+0x1c>
 8000b50:	42a9      	cmp	r1, r5
 8000b52:	d905      	bls.n	8000b60 <_malloc_r+0x28>
 8000b54:	230c      	movs	r3, #12
 8000b56:	2600      	movs	r6, #0
 8000b58:	603b      	str	r3, [r7, #0]
 8000b5a:	4630      	mov	r0, r6
 8000b5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b60:	4e2e      	ldr	r6, [pc, #184]	; (8000c1c <_malloc_r+0xe4>)
 8000b62:	f000 f907 	bl	8000d74 <__malloc_lock>
 8000b66:	6833      	ldr	r3, [r6, #0]
 8000b68:	461c      	mov	r4, r3
 8000b6a:	bb34      	cbnz	r4, 8000bba <_malloc_r+0x82>
 8000b6c:	4629      	mov	r1, r5
 8000b6e:	4638      	mov	r0, r7
 8000b70:	f7ff ffc2 	bl	8000af8 <sbrk_aligned>
 8000b74:	1c43      	adds	r3, r0, #1
 8000b76:	4604      	mov	r4, r0
 8000b78:	d14d      	bne.n	8000c16 <_malloc_r+0xde>
 8000b7a:	6834      	ldr	r4, [r6, #0]
 8000b7c:	4626      	mov	r6, r4
 8000b7e:	2e00      	cmp	r6, #0
 8000b80:	d140      	bne.n	8000c04 <_malloc_r+0xcc>
 8000b82:	6823      	ldr	r3, [r4, #0]
 8000b84:	4631      	mov	r1, r6
 8000b86:	4638      	mov	r0, r7
 8000b88:	eb04 0803 	add.w	r8, r4, r3
 8000b8c:	f000 f848 	bl	8000c20 <_sbrk_r>
 8000b90:	4580      	cmp	r8, r0
 8000b92:	d13a      	bne.n	8000c0a <_malloc_r+0xd2>
 8000b94:	6821      	ldr	r1, [r4, #0]
 8000b96:	3503      	adds	r5, #3
 8000b98:	1a6d      	subs	r5, r5, r1
 8000b9a:	f025 0503 	bic.w	r5, r5, #3
 8000b9e:	3508      	adds	r5, #8
 8000ba0:	2d0c      	cmp	r5, #12
 8000ba2:	bf38      	it	cc
 8000ba4:	250c      	movcc	r5, #12
 8000ba6:	4638      	mov	r0, r7
 8000ba8:	4629      	mov	r1, r5
 8000baa:	f7ff ffa5 	bl	8000af8 <sbrk_aligned>
 8000bae:	3001      	adds	r0, #1
 8000bb0:	d02b      	beq.n	8000c0a <_malloc_r+0xd2>
 8000bb2:	6823      	ldr	r3, [r4, #0]
 8000bb4:	442b      	add	r3, r5
 8000bb6:	6023      	str	r3, [r4, #0]
 8000bb8:	e00e      	b.n	8000bd8 <_malloc_r+0xa0>
 8000bba:	6822      	ldr	r2, [r4, #0]
 8000bbc:	1b52      	subs	r2, r2, r5
 8000bbe:	d41e      	bmi.n	8000bfe <_malloc_r+0xc6>
 8000bc0:	2a0b      	cmp	r2, #11
 8000bc2:	d916      	bls.n	8000bf2 <_malloc_r+0xba>
 8000bc4:	1961      	adds	r1, r4, r5
 8000bc6:	42a3      	cmp	r3, r4
 8000bc8:	6025      	str	r5, [r4, #0]
 8000bca:	bf18      	it	ne
 8000bcc:	6059      	strne	r1, [r3, #4]
 8000bce:	6863      	ldr	r3, [r4, #4]
 8000bd0:	bf08      	it	eq
 8000bd2:	6031      	streq	r1, [r6, #0]
 8000bd4:	5162      	str	r2, [r4, r5]
 8000bd6:	604b      	str	r3, [r1, #4]
 8000bd8:	4638      	mov	r0, r7
 8000bda:	f104 060b 	add.w	r6, r4, #11
 8000bde:	f000 f8cf 	bl	8000d80 <__malloc_unlock>
 8000be2:	f026 0607 	bic.w	r6, r6, #7
 8000be6:	1d23      	adds	r3, r4, #4
 8000be8:	1af2      	subs	r2, r6, r3
 8000bea:	d0b6      	beq.n	8000b5a <_malloc_r+0x22>
 8000bec:	1b9b      	subs	r3, r3, r6
 8000bee:	50a3      	str	r3, [r4, r2]
 8000bf0:	e7b3      	b.n	8000b5a <_malloc_r+0x22>
 8000bf2:	6862      	ldr	r2, [r4, #4]
 8000bf4:	42a3      	cmp	r3, r4
 8000bf6:	bf0c      	ite	eq
 8000bf8:	6032      	streq	r2, [r6, #0]
 8000bfa:	605a      	strne	r2, [r3, #4]
 8000bfc:	e7ec      	b.n	8000bd8 <_malloc_r+0xa0>
 8000bfe:	4623      	mov	r3, r4
 8000c00:	6864      	ldr	r4, [r4, #4]
 8000c02:	e7b2      	b.n	8000b6a <_malloc_r+0x32>
 8000c04:	4634      	mov	r4, r6
 8000c06:	6876      	ldr	r6, [r6, #4]
 8000c08:	e7b9      	b.n	8000b7e <_malloc_r+0x46>
 8000c0a:	230c      	movs	r3, #12
 8000c0c:	4638      	mov	r0, r7
 8000c0e:	603b      	str	r3, [r7, #0]
 8000c10:	f000 f8b6 	bl	8000d80 <__malloc_unlock>
 8000c14:	e7a1      	b.n	8000b5a <_malloc_r+0x22>
 8000c16:	6025      	str	r5, [r4, #0]
 8000c18:	e7de      	b.n	8000bd8 <_malloc_r+0xa0>
 8000c1a:	bf00      	nop
 8000c1c:	20000088 	.word	0x20000088

08000c20 <_sbrk_r>:
 8000c20:	b538      	push	{r3, r4, r5, lr}
 8000c22:	2300      	movs	r3, #0
 8000c24:	4d05      	ldr	r5, [pc, #20]	; (8000c3c <_sbrk_r+0x1c>)
 8000c26:	4604      	mov	r4, r0
 8000c28:	4608      	mov	r0, r1
 8000c2a:	602b      	str	r3, [r5, #0]
 8000c2c:	f7ff fb38 	bl	80002a0 <_sbrk>
 8000c30:	1c43      	adds	r3, r0, #1
 8000c32:	d102      	bne.n	8000c3a <_sbrk_r+0x1a>
 8000c34:	682b      	ldr	r3, [r5, #0]
 8000c36:	b103      	cbz	r3, 8000c3a <_sbrk_r+0x1a>
 8000c38:	6023      	str	r3, [r4, #0]
 8000c3a:	bd38      	pop	{r3, r4, r5, pc}
 8000c3c:	20000090 	.word	0x20000090

08000c40 <__sread>:
 8000c40:	b510      	push	{r4, lr}
 8000c42:	460c      	mov	r4, r1
 8000c44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c48:	f000 f8a0 	bl	8000d8c <_read_r>
 8000c4c:	2800      	cmp	r0, #0
 8000c4e:	bfab      	itete	ge
 8000c50:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c52:	89a3      	ldrhlt	r3, [r4, #12]
 8000c54:	181b      	addge	r3, r3, r0
 8000c56:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c5a:	bfac      	ite	ge
 8000c5c:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c5e:	81a3      	strhlt	r3, [r4, #12]
 8000c60:	bd10      	pop	{r4, pc}

08000c62 <__swrite>:
 8000c62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c66:	461f      	mov	r7, r3
 8000c68:	898b      	ldrh	r3, [r1, #12]
 8000c6a:	4605      	mov	r5, r0
 8000c6c:	05db      	lsls	r3, r3, #23
 8000c6e:	460c      	mov	r4, r1
 8000c70:	4616      	mov	r6, r2
 8000c72:	d505      	bpl.n	8000c80 <__swrite+0x1e>
 8000c74:	2302      	movs	r3, #2
 8000c76:	2200      	movs	r2, #0
 8000c78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c7c:	f000 f868 	bl	8000d50 <_lseek_r>
 8000c80:	89a3      	ldrh	r3, [r4, #12]
 8000c82:	4632      	mov	r2, r6
 8000c84:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c88:	81a3      	strh	r3, [r4, #12]
 8000c8a:	4628      	mov	r0, r5
 8000c8c:	463b      	mov	r3, r7
 8000c8e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c92:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c96:	f000 b817 	b.w	8000cc8 <_write_r>

08000c9a <__sseek>:
 8000c9a:	b510      	push	{r4, lr}
 8000c9c:	460c      	mov	r4, r1
 8000c9e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ca2:	f000 f855 	bl	8000d50 <_lseek_r>
 8000ca6:	1c43      	adds	r3, r0, #1
 8000ca8:	89a3      	ldrh	r3, [r4, #12]
 8000caa:	bf15      	itete	ne
 8000cac:	6560      	strne	r0, [r4, #84]	; 0x54
 8000cae:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000cb2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000cb6:	81a3      	strheq	r3, [r4, #12]
 8000cb8:	bf18      	it	ne
 8000cba:	81a3      	strhne	r3, [r4, #12]
 8000cbc:	bd10      	pop	{r4, pc}

08000cbe <__sclose>:
 8000cbe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cc2:	f000 b813 	b.w	8000cec <_close_r>
	...

08000cc8 <_write_r>:
 8000cc8:	b538      	push	{r3, r4, r5, lr}
 8000cca:	4604      	mov	r4, r0
 8000ccc:	4608      	mov	r0, r1
 8000cce:	4611      	mov	r1, r2
 8000cd0:	2200      	movs	r2, #0
 8000cd2:	4d05      	ldr	r5, [pc, #20]	; (8000ce8 <_write_r+0x20>)
 8000cd4:	602a      	str	r2, [r5, #0]
 8000cd6:	461a      	mov	r2, r3
 8000cd8:	f7ff fa95 	bl	8000206 <_write>
 8000cdc:	1c43      	adds	r3, r0, #1
 8000cde:	d102      	bne.n	8000ce6 <_write_r+0x1e>
 8000ce0:	682b      	ldr	r3, [r5, #0]
 8000ce2:	b103      	cbz	r3, 8000ce6 <_write_r+0x1e>
 8000ce4:	6023      	str	r3, [r4, #0]
 8000ce6:	bd38      	pop	{r3, r4, r5, pc}
 8000ce8:	20000090 	.word	0x20000090

08000cec <_close_r>:
 8000cec:	b538      	push	{r3, r4, r5, lr}
 8000cee:	2300      	movs	r3, #0
 8000cf0:	4d05      	ldr	r5, [pc, #20]	; (8000d08 <_close_r+0x1c>)
 8000cf2:	4604      	mov	r4, r0
 8000cf4:	4608      	mov	r0, r1
 8000cf6:	602b      	str	r3, [r5, #0]
 8000cf8:	f7ff faa1 	bl	800023e <_close>
 8000cfc:	1c43      	adds	r3, r0, #1
 8000cfe:	d102      	bne.n	8000d06 <_close_r+0x1a>
 8000d00:	682b      	ldr	r3, [r5, #0]
 8000d02:	b103      	cbz	r3, 8000d06 <_close_r+0x1a>
 8000d04:	6023      	str	r3, [r4, #0]
 8000d06:	bd38      	pop	{r3, r4, r5, pc}
 8000d08:	20000090 	.word	0x20000090

08000d0c <_fstat_r>:
 8000d0c:	b538      	push	{r3, r4, r5, lr}
 8000d0e:	2300      	movs	r3, #0
 8000d10:	4d06      	ldr	r5, [pc, #24]	; (8000d2c <_fstat_r+0x20>)
 8000d12:	4604      	mov	r4, r0
 8000d14:	4608      	mov	r0, r1
 8000d16:	4611      	mov	r1, r2
 8000d18:	602b      	str	r3, [r5, #0]
 8000d1a:	f7ff fa9b 	bl	8000254 <_fstat>
 8000d1e:	1c43      	adds	r3, r0, #1
 8000d20:	d102      	bne.n	8000d28 <_fstat_r+0x1c>
 8000d22:	682b      	ldr	r3, [r5, #0]
 8000d24:	b103      	cbz	r3, 8000d28 <_fstat_r+0x1c>
 8000d26:	6023      	str	r3, [r4, #0]
 8000d28:	bd38      	pop	{r3, r4, r5, pc}
 8000d2a:	bf00      	nop
 8000d2c:	20000090 	.word	0x20000090

08000d30 <_isatty_r>:
 8000d30:	b538      	push	{r3, r4, r5, lr}
 8000d32:	2300      	movs	r3, #0
 8000d34:	4d05      	ldr	r5, [pc, #20]	; (8000d4c <_isatty_r+0x1c>)
 8000d36:	4604      	mov	r4, r0
 8000d38:	4608      	mov	r0, r1
 8000d3a:	602b      	str	r3, [r5, #0]
 8000d3c:	f7ff fa99 	bl	8000272 <_isatty>
 8000d40:	1c43      	adds	r3, r0, #1
 8000d42:	d102      	bne.n	8000d4a <_isatty_r+0x1a>
 8000d44:	682b      	ldr	r3, [r5, #0]
 8000d46:	b103      	cbz	r3, 8000d4a <_isatty_r+0x1a>
 8000d48:	6023      	str	r3, [r4, #0]
 8000d4a:	bd38      	pop	{r3, r4, r5, pc}
 8000d4c:	20000090 	.word	0x20000090

08000d50 <_lseek_r>:
 8000d50:	b538      	push	{r3, r4, r5, lr}
 8000d52:	4604      	mov	r4, r0
 8000d54:	4608      	mov	r0, r1
 8000d56:	4611      	mov	r1, r2
 8000d58:	2200      	movs	r2, #0
 8000d5a:	4d05      	ldr	r5, [pc, #20]	; (8000d70 <_lseek_r+0x20>)
 8000d5c:	602a      	str	r2, [r5, #0]
 8000d5e:	461a      	mov	r2, r3
 8000d60:	f7ff fa91 	bl	8000286 <_lseek>
 8000d64:	1c43      	adds	r3, r0, #1
 8000d66:	d102      	bne.n	8000d6e <_lseek_r+0x1e>
 8000d68:	682b      	ldr	r3, [r5, #0]
 8000d6a:	b103      	cbz	r3, 8000d6e <_lseek_r+0x1e>
 8000d6c:	6023      	str	r3, [r4, #0]
 8000d6e:	bd38      	pop	{r3, r4, r5, pc}
 8000d70:	20000090 	.word	0x20000090

08000d74 <__malloc_lock>:
 8000d74:	4801      	ldr	r0, [pc, #4]	; (8000d7c <__malloc_lock+0x8>)
 8000d76:	f7ff be0f 	b.w	8000998 <__retarget_lock_acquire_recursive>
 8000d7a:	bf00      	nop
 8000d7c:	20000084 	.word	0x20000084

08000d80 <__malloc_unlock>:
 8000d80:	4801      	ldr	r0, [pc, #4]	; (8000d88 <__malloc_unlock+0x8>)
 8000d82:	f7ff be0a 	b.w	800099a <__retarget_lock_release_recursive>
 8000d86:	bf00      	nop
 8000d88:	20000084 	.word	0x20000084

08000d8c <_read_r>:
 8000d8c:	b538      	push	{r3, r4, r5, lr}
 8000d8e:	4604      	mov	r4, r0
 8000d90:	4608      	mov	r0, r1
 8000d92:	4611      	mov	r1, r2
 8000d94:	2200      	movs	r2, #0
 8000d96:	4d05      	ldr	r5, [pc, #20]	; (8000dac <_read_r+0x20>)
 8000d98:	602a      	str	r2, [r5, #0]
 8000d9a:	461a      	mov	r2, r3
 8000d9c:	f7ff fa16 	bl	80001cc <_read>
 8000da0:	1c43      	adds	r3, r0, #1
 8000da2:	d102      	bne.n	8000daa <_read_r+0x1e>
 8000da4:	682b      	ldr	r3, [r5, #0]
 8000da6:	b103      	cbz	r3, 8000daa <_read_r+0x1e>
 8000da8:	6023      	str	r3, [r4, #0]
 8000daa:	bd38      	pop	{r3, r4, r5, pc}
 8000dac:	20000090 	.word	0x20000090

08000db0 <_init>:
 8000db0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000db2:	bf00      	nop
 8000db4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000db6:	bc08      	pop	{r3}
 8000db8:	469e      	mov	lr, r3
 8000dba:	4770      	bx	lr

08000dbc <_fini>:
 8000dbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dbe:	bf00      	nop
 8000dc0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dc2:	bc08      	pop	{r3}
 8000dc4:	469e      	mov	lr, r3
 8000dc6:	4770      	bx	lr
